# -**- eval: org-toggle-inline-images: 1 -**-
#+Title: Getting Eurostat data 
#+Author: Jan Boone@@latex:\thanks{Tilburg University, Department of Economics, Tilec and CEPR, E-mail: \textit{j.boone@uvt.nl}.}@@
#+PROPERTY: header-args  :session geopandas :kernel python3 :async yes
# kernel can be geo_env or python3

#+LANGUAGE: en
#+INFOJS_OPT: toc:1 ltoc:1 mouse:underline path:http://orgmode.org/org-info.js
#+LaTeX_CLASS: article-12
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+OPTIONS: toc:nil timestamp:nil \n:nil @:t ::t |:t ^:{} _:{} *:t TeX:t LaTeX:t
#+HTML_HEAD: <link rel="stylesheet" href="./latex-css/style.css">
#+HTML_HEAD: <link rel="stylesheet" href="https://latex.now.sh/prism/prism.css">
#+HTML_HEAD: <script src="https://cdn.jsdelivr.net/npm/prismjs/prism.min.js"></script>


# this file must exist be a path or exist in `org-cite-csl-styles-dir': # apa-5th-edition.csl
#+csl-style: chicago-author-date-16th-edition.csl

# this must be a locales file in `org-cite-csl-locales-dir'. Defaults to en-US
#+csl-locale: en-US

* code to export to html :noexport:

#+BEGIN_SRC emacs-lisp :results silent
(setq org-export-with-broken-links t)

(require 'org-ref-refproc)
(let ((org-export-before-parsing-hook '(;;org-ref-cite-natmove ;; do this first
                    org-ref-csl-preprocess-buffer
                    org-ref-refproc)))
  (org-open-file (org-html-export-to-html)))
#+END_SRC

* Introduction

This file describes how we get the data for our project on [[./index.org][the health effects of demand side cost sharing]].

In this file we explain how we get the data and from where and at the same time we generate the data. By generating the data in this way, a change in the data by Eurostat will lead to (slightly) different results.

- Link to excel file with overview: http://ec.europa.eu/eurostat/documents/140934/4381644/Regional-statistics-overview.xlsx


The dataset itself is too big for github and can be found on [[https://dataverse.nl/dataset.xhtml?persistentId=doi:10.34894/AABEBD][DataverseNL]].


* Preamble code

Run this code first before running the code of particular data sets. It imports the relevant libraries.

#+begin_src jupyter-python
import numpy as np
import pandas as pd
from country_codes import oecd_dictionary, eurostat_dictionary
import eurostat
import xarray as xr
import matplotlib.pyplot as plt

EU_countries = ['Belgium', 'Bulgaria', 'Czechia', 'Denmark',
'Germany (until 1990 former territory of the FRG)', 'Germany','Estonia',
'Ireland', 'Greece', 'Spain', 'France', 'Croatia', 'Italy',
'Cyprus', 'Latvia', 'Lithuania', 'Luxembourg', 'Hungary', 'Malta',
'Netherlands', 'Austria', 'Poland', 'Portugal', 'Romania',
'Slovenia', 'Slovakia', 'Finland', 'Sweden', 'United Kingdom',
'Iceland', 'Liechtenstein', 'Norway', 'Switzerland',
'Bosnia and Herzegovina']

#+end_src

#+RESULTS:


We first describe how we get the data for each variable. Each of these variables is saved in a separate dataset. The final section contains the code that merges the data for these variables into one (big) dataset.

* Data

- overview of regional data: https://ec.europa.eu/eurostat/web/regions/data/database


** population

- population: https://ec.europa.eu/eurostat/databrowser/view/demo_r_d2jan/default/table?lang=en


#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('demo_r_d2jan')
df.rename({'geo\\TIME_PERIOD':'geo'},inplace=True,axis=1)
age_range = ['Y1', 'Y10', 'Y11', 'Y12', 'Y13', 'Y14', 'Y15',
       'Y16', 'Y17', 'Y18', 'Y19', 'Y2', 'Y20', 'Y21', 'Y22', 'Y23',
       'Y24', 'Y25', 'Y26', 'Y27', 'Y28', 'Y29', 'Y3', 'Y30', 'Y31',
       'Y32', 'Y33', 'Y34', 'Y35', 'Y36', 'Y37', 'Y38', 'Y39', 'Y4',
       'Y40', 'Y41', 'Y42', 'Y43', 'Y44', 'Y45', 'Y46', 'Y47', 'Y48',
       'Y49', 'Y5', 'Y50', 'Y51', 'Y52', 'Y53', 'Y54', 'Y55', 'Y56',
       'Y57', 'Y58', 'Y59', 'Y6', 'Y60', 'Y61', 'Y62', 'Y63', 'Y64',
       'Y65', 'Y66', 'Y67', 'Y68', 'Y69', 'Y7', 'Y70', 'Y71', 'Y72',
       'Y73', 'Y74', 'Y75', 'Y76', 'Y77', 'Y78', 'Y79', 'Y8', 'Y80',
       'Y81', 'Y82', 'Y83', 'Y84', 'Y85', 'Y86', 'Y87', 'Y88', 'Y89',
       'Y9', 'Y90', 'Y91', 'Y92', 'Y93', 'Y94', 'Y95', 'Y96', 'Y97',
       'Y98', 'Y99']
df['country_code'] = [x[:2] for x in df['geo']]
df['country'] = df['country_code'].replace(eurostat_dictionary)
df = df[df.country.isin(EU_countries) & \
        (df.sex.isin(["M","F"])) & (df.age.isin(age_range))]
df.drop(['country_code'],axis=1,inplace=True)
df = pd.melt(df,id_vars=['geo','country','sex','age'],
                        value_vars=[str(y) for y in np.arange(1990,2021)],
                        var_name='year',value_name='population')
df['nuts'] = [len(x)-2 for x in df.geo]
df = df.query('nuts == 2')
df.drop('nuts',inplace=True, axis=1)
df.rename({'geo':'nuts2', 'age':'age string'},\
          axis=1,inplace=True)
df['age'] = [float(x.replace('Y','')) for x in df['age string']]
df.drop('age string',inplace=True, axis=1)

#df.set_index(['nuts2','year','sex','age'],inplace=True)

df.head()
#+end_src

#+RESULTS:
:   nuts2  country sex  year  population  age
: 2  AT11  Austria   F  1990      1345.0  1.0
: 3  AT12  Austria   F  1990      8038.0  1.0
: 4  AT13  Austria   F  1990      7240.0  1.0
: 6  AT21  Austria   F  1990      3042.0  1.0
: 7  AT22  Austria   F  1990      6491.0  1.0



#+begin_src jupyter-python :display plain
@np.vectorize
def age_to_age_category(age):
    if age < 16:
        cat = 'Y0-15'
    elif age < 25:
        cat = 'Y16-24'
    elif age < 35:
        cat = 'Y25-34'
    elif age < 45:
        cat = 'Y35-44'
    elif age < 55:
        cat = 'Y45-54'
    elif age < 65:
        cat = 'Y55-64'
    elif age < 75:
        cat = 'Y65-74'
    elif age < 85:
        cat = 'Y75-84'
    else:
        cat = 'Y_GE85'
    return cat
df['age_category'] = age_to_age_category(df.age)
df.head()
#+end_src




#+RESULTS:
:   nuts2  country sex  year  population  age age_category
: 2  AT11  Austria   F  1990      1345.0  1.0        Y0-15
: 3  AT12  Austria   F  1990      8038.0  1.0        Y0-15
: 4  AT13  Austria   F  1990      7240.0  1.0        Y0-15
: 6  AT21  Austria   F  1990      3042.0  1.0        Y0-15
: 7  AT22  Austria   F  1990      6491.0  1.0        Y0-15



** OOP per country

We want a measure of "how generous" a healthcare system is in terms of oop-payments. This feature of the healthcare system tends to be defined at the country level. We use household oop payment and expenditure on voluntary payment schemes (for things that are not covered by basic or mandatory insurance). The paper uses mainly =PC_CHE= as unit of measurement.

- link to data: https://ec.europa.eu/eurostat/databrowser/view/hlth_sha11_hf/default/table?lang=en

| abbreviation | name                                                       |
|--------------+------------------------------------------------------------|
| HF2          | Voluntary health care payment schemes                      |
| HF3          | Household out-of-pocket payment                            |
| PC_CHE       | Percentual share of total current health expenditure (CHE) |
| PPS_HAB      | Purchasing power standard (PPS) per inhabitant             |


#+begin_src jupyter-python :display plain
df_o = eurostat.get_data_df('hlth_sha11_hf')
df_o.rename({'geo\\TIME_PERIOD':'geo'},inplace=True,axis=1)
df_o['country_code'] = [x[:2] for x in df_o['geo']]
df_o['country'] = df_o['country_code'].replace(eurostat_dictionary)
df_o = df_o[df_o.country.isin(EU_countries)  & \
        (df_o.icha11_hf.isin(["HF2", "HF3"])) &\
        (df_o.unit.isin([ 'PC_CHE','PPS_HAB']))]
df_o.drop(["geo"],axis=1,inplace=True)

df_o = pd.melt(df_o,id_vars=['country','country_code',\
                         'unit','icha11_hf'],
                        value_vars=[str(y) for y in np.arange(1992,2019)],
                        var_name='year',\
             value_name='health_expenditure')
df_o.set_index(['country','country_code',\
              'year','unit','icha11_hf'],inplace=True)
df_o = df_o.unstack()
df_o.columns = df_o.columns.droplevel()
df_o = df_o.unstack()
df_o.columns = df_o.columns.droplevel()
df_o.columns = ['HF2_PC_CHE','HF2_PPS_HAB',\
              'HF3_PC_CHE','HF3_PPS_HAB']
df_o.reset_index(inplace=True)
df_o.set_index(['country','year'],inplace=True)
df_o.tail()
#+end_src

#+RESULTS:
#+begin_example
                    country_code  HF2_PC_CHE  HF2_PPS_HAB  HF3_PC_CHE  \
country        year                                                     
United Kingdom 2014           UK        5.40       149.18       15.16   
               2015           UK        5.40       151.39       15.23   
               2016           UK        5.04       142.30       15.37   
               2017           UK        5.41       155.88       15.72   
               2018           UK        5.62       165.77       15.88   

                     HF3_PPS_HAB  
country        year               
United Kingdom 2014       419.03  
               2015       427.46  
               2016       434.36  
               2017       453.26  
               2018       468.46  
#+end_example






#+begin_src jupyter-python :display plain
# df = df.merge(df_c, how = 'left',\
#               on = ['country','year','sex','age_category'])
df = df.merge(df_o, how = 'left',\
              on = ['country','year'])
df.set_index(['nuts2','year','sex','age'],inplace=True)
df.tail()
#+end_src

#+RESULTS:
#+begin_example
                            country  population age_category country_code  \
nuts2 year sex age                                                          
UKM6  2020 M   99.0  United Kingdom         NaN       Y_GE85          NaN   
UKM7  2020 M   99.0  United Kingdom         NaN       Y_GE85          NaN   
UKM8  2020 M   99.0  United Kingdom         NaN       Y_GE85          NaN   
UKM9  2020 M   99.0  United Kingdom         NaN       Y_GE85          NaN   
UKN0  2020 M   99.0  United Kingdom         NaN       Y_GE85          NaN   

                     HF2_PC_CHE  HF2_PPS_HAB  HF3_PC_CHE  HF3_PPS_HAB  
nuts2 year sex age                                                     
UKM6  2020 M   99.0         NaN          NaN         NaN          NaN  
UKM7  2020 M   99.0         NaN          NaN         NaN          NaN  
UKM8  2020 M   99.0         NaN          NaN         NaN          NaN  
UKM9  2020 M   99.0         NaN          NaN         NaN          NaN  
UKN0  2020 M   99.0         NaN          NaN         NaN          NaN  
#+end_example






#+begin_src jupyter-python 
ds = df.to_xarray()
ds.to_netcdf("./data/population_nuts_2.nc")
ds
#+end_src

#+RESULTS:
#+begin_export html
<div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewBox="0 0 32 32">
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewBox="0 0 32 32">
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

html[theme="dark"],
html[data-theme="dark"],
body[data-theme="dark"],
body.vscode-dark {
  --xr-font-color0: rgba(255, 255, 255, 1);
  --xr-font-color2: rgba(255, 255, 255, 0.54);
  --xr-font-color3: rgba(255, 255, 255, 0.38);
  --xr-border-color: #1f1f1f;
  --xr-disabled-color: #515151;
  --xr-background-color: #111111;
  --xr-background-color-row-even: #111111;
  --xr-background-color-row-odd: #313131;
}

.xr-wrap {
  display: block !important;
  min-width: 300px;
  max-width: 700px;
}

.xr-text-repr-fallback {
  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
  display: none;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: inline-block;
  opacity: 0;
  height: 0;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:focus + label {
  border: 2px solid var(--xr-font-color0);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: "►";
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: "▼";
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: "(";
}

.xr-dim-list:after {
  content: ")";
}

.xr-dim-list li:not(:last-child):after {
  content: ",";
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-index-preview {
  grid-column: 2 / 5;
  color: var(--xr-font-color2);
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt,
.xr-attrs dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 123MB
Dimensions:       (nuts2: 313, year: 31, sex: 2, age: 99)
Coordinates:
  * nuts2         (nuts2) object 3kB &#x27;AT11&#x27; &#x27;AT12&#x27; &#x27;AT13&#x27; ... &#x27;UKM9&#x27; &#x27;UKN0&#x27;
  * year          (year) object 248B &#x27;1990&#x27; &#x27;1991&#x27; &#x27;1992&#x27; ... &#x27;2019&#x27; &#x27;2020&#x27;
  * sex           (sex) object 16B &#x27;F&#x27; &#x27;M&#x27;
  * age           (age) float64 792B 1.0 2.0 3.0 4.0 5.0 ... 96.0 97.0 98.0 99.0
Data variables:
    country       (nuts2, year, sex, age) object 15MB &#x27;Austria&#x27; ... &#x27;United K...
    population    (nuts2, year, sex, age) float64 15MB 1.345e+03 ... nan
    age_category  (nuts2, year, sex, age) object 15MB &#x27;Y0-15&#x27; ... &#x27;Y_GE85&#x27;
    country_code  (nuts2, year, sex, age) object 15MB nan nan nan ... nan nan
    HF2_PC_CHE    (nuts2, year, sex, age) float64 15MB nan nan nan ... nan nan
    HF2_PPS_HAB   (nuts2, year, sex, age) float64 15MB nan nan nan ... nan nan
    HF3_PC_CHE    (nuts2, year, sex, age) float64 15MB nan nan nan ... nan nan
    HF3_PPS_HAB   (nuts2, year, sex, age) float64 15MB nan nan nan ... nan nan</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-95e0a1d8-b50a-4d05-a70d-54ba5259c9c1' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-95e0a1d8-b50a-4d05-a70d-54ba5259c9c1' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>nuts2</span>: 313</li><li><span class='xr-has-index'>year</span>: 31</li><li><span class='xr-has-index'>sex</span>: 2</li><li><span class='xr-has-index'>age</span>: 99</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-350cb3e6-c91f-4747-91f7-c3e1a0acfd63' class='xr-section-summary-in' type='checkbox'  checked><label for='section-350cb3e6-c91f-4747-91f7-c3e1a0acfd63' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>nuts2</span></div><div class='xr-var-dims'>(nuts2)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AT11&#x27; &#x27;AT12&#x27; ... &#x27;UKM9&#x27; &#x27;UKN0&#x27;</div><input id='attrs-4b21484d-0b75-4caa-b298-235458f2ba99' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-4b21484d-0b75-4caa-b298-235458f2ba99' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-cc7bd2b8-ece2-4efa-aa1f-d48631f1f4ff' class='xr-var-data-in' type='checkbox'><label for='data-cc7bd2b8-ece2-4efa-aa1f-d48631f1f4ff' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, ..., &#x27;UKM8&#x27;, &#x27;UKM9&#x27;, &#x27;UKN0&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>year</span></div><div class='xr-var-dims'>(year)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;1990&#x27; &#x27;1991&#x27; ... &#x27;2019&#x27; &#x27;2020&#x27;</div><input id='attrs-ad402475-78a5-4ed3-9d10-8fb717569a5b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ad402475-78a5-4ed3-9d10-8fb717569a5b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-798261d6-2562-433b-8606-c10bf2889905' class='xr-var-data-in' type='checkbox'><label for='data-798261d6-2562-433b-8606-c10bf2889905' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;1990&#x27;, &#x27;1991&#x27;, &#x27;1992&#x27;, &#x27;1993&#x27;, &#x27;1994&#x27;, &#x27;1995&#x27;, &#x27;1996&#x27;, &#x27;1997&#x27;, &#x27;1998&#x27;,
       &#x27;1999&#x27;, &#x27;2000&#x27;, &#x27;2001&#x27;, &#x27;2002&#x27;, &#x27;2003&#x27;, &#x27;2004&#x27;, &#x27;2005&#x27;, &#x27;2006&#x27;, &#x27;2007&#x27;,
       &#x27;2008&#x27;, &#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;,
       &#x27;2017&#x27;, &#x27;2018&#x27;, &#x27;2019&#x27;, &#x27;2020&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>sex</span></div><div class='xr-var-dims'>(sex)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;F&#x27; &#x27;M&#x27;</div><input id='attrs-bc1e16e1-e027-4917-a58d-27ee425f2ce2' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-bc1e16e1-e027-4917-a58d-27ee425f2ce2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-74ecab6d-4601-49a1-86d3-e10ab092bda3' class='xr-var-data-in' type='checkbox'><label for='data-74ecab6d-4601-49a1-86d3-e10ab092bda3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;F&#x27;, &#x27;M&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>age</span></div><div class='xr-var-dims'>(age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.0 2.0 3.0 4.0 ... 97.0 98.0 99.0</div><input id='attrs-cd3923fb-1d88-4551-b11d-2e009340960b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-cd3923fb-1d88-4551-b11d-2e009340960b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1c547d0a-3bab-4b80-b72c-5a950c42fd76' class='xr-var-data-in' type='checkbox'><label for='data-1c547d0a-3bab-4b80-b72c-5a950c42fd76' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,
       15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
       29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
       43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
       57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
       71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
       85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96., 97., 98.,
       99.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-c2091a4e-9af3-4d24-9a71-5cdf0f479589' class='xr-section-summary-in' type='checkbox'  checked><label for='section-c2091a4e-9af3-4d24-9a71-5cdf0f479589' class='xr-section-summary' >Data variables: <span>(8)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>country</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;Austria&#x27; ... &#x27;United Kingdom&#x27;</div><input id='attrs-681aa43b-3ded-492a-9e7c-424352713215' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-681aa43b-3ded-492a-9e7c-424352713215' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-872199e0-0834-4ee5-8fe3-f0566bb279e4' class='xr-var-data-in' type='checkbox'><label for='data-872199e0-0834-4ee5-8fe3-f0566bb279e4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;],
         [&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;]],

        [[&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;],
         [&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;]],

        [[&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;],
         [&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;]],

        ...,

        [[&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;],
         [&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
...
         [&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;]],

        ...,

        [[&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;],
         [&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;]],

        [[&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;],
         [&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;]],

        [[&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;],
         [&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;]]]],
      dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>population</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.345e+03 1.349e+03 ... nan nan</div><input id='attrs-853f4eb2-10a6-4249-b0d9-59b6a7cf5bac' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-853f4eb2-10a6-4249-b0d9-59b6a7cf5bac' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-347d37d1-7c84-4e9b-b68e-3697e9e7bb22' class='xr-var-data-in' type='checkbox'><label for='data-347d37d1-7c84-4e9b-b68e-3697e9e7bb22' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[1.3450e+03, 1.3490e+03, 1.4070e+03, ...,        nan,
                 nan,        nan],
         [1.4380e+03, 1.4500e+03, 1.4920e+03, ...,        nan,
                 nan,        nan]],

        [[1.3710e+03, 1.3760e+03, 1.3810e+03, ...,        nan,
                 nan,        nan],
         [1.4550e+03, 1.4660e+03, 1.4700e+03, ...,        nan,
                 nan,        nan]],

        [[1.4360e+03, 1.4140e+03, 1.4260e+03, ...,        nan,
                 nan,        nan],
         [1.4280e+03, 1.4940e+03, 1.5070e+03, ...,        nan,
                 nan,        nan]],

        ...,

        [[1.1630e+03, 1.1810e+03, 1.1690e+03, ..., 7.4000e+01,
          3.7000e+01, 1.9000e+01],
         [1.2910e+03, 1.2630e+03, 1.3150e+03, ..., 1.7000e+01,
...
                 nan,        nan],
         [1.3305e+04, 1.3199e+04, 1.3380e+04, ...,        nan,
                 nan,        nan]],

        ...,

        [[1.1730e+04, 1.1970e+04, 1.2065e+04, ..., 3.6600e+02,
          2.2800e+02, 1.3400e+02],
         [1.2481e+04, 1.2764e+04, 1.2681e+04, ..., 1.1300e+02,
          4.2000e+01, 3.3000e+01]],

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan]],

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan]]]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>age_category</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;Y0-15&#x27; &#x27;Y0-15&#x27; ... &#x27;Y_GE85&#x27;</div><input id='attrs-d3695352-f882-4f75-b240-1e4dc50a55b6' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d3695352-f882-4f75-b240-1e4dc50a55b6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f2f9627f-3205-414a-bf60-72a7da3266a5' class='xr-var-data-in' type='checkbox'><label for='data-f2f9627f-3205-414a-bf60-72a7da3266a5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]],

        [[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]],

        [[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]],

        ...,

        [[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]],

        [[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]],

        [[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]]],

...
       [[[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]],

        [[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]],

        [[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]],

        ...,

        [[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]],

        [[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]],

        [[&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;],
         [&#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, &#x27;Y0-15&#x27;, ..., &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;, &#x27;Y_GE85&#x27;]]]],
      dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>country_code</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... nan nan nan nan</div><input id='attrs-2bd21fb4-b0f6-4a9c-b182-9e73982e7836' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2bd21fb4-b0f6-4a9c-b182-9e73982e7836' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-07503a8d-1228-4239-ba22-29b9e13ff852' class='xr-var-data-in' type='checkbox'><label for='data-07503a8d-1228-4239-ba22-29b9e13ff852' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;],
         [&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;]],

        ...,

        [[&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;],
         [&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]],

...

       [[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;],
         [&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;]],

        ...,

        [[&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;],
         [&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>HF2_PC_CHE</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... nan nan nan nan</div><input id='attrs-6ea8a69f-b7dd-4755-8ead-8df0eeb6b1aa' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6ea8a69f-b7dd-4755-8ead-8df0eeb6b1aa' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-97499698-74f8-45cc-9cb5-fda609feab38' class='xr-var-data-in' type='checkbox'><label for='data-97499698-74f8-45cc-9cb5-fda609feab38' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        ...,

        [[6.91, 6.91, 6.91, ..., 6.91, 6.91, 6.91],
         [6.91, 6.91, 6.91, ..., 6.91, 6.91, 6.91]],

        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]]],

...

       [[[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        ...,

        [[5.62, 5.62, 5.62, ..., 5.62, 5.62, 5.62],
         [5.62, 5.62, 5.62, ..., 5.62, 5.62, 5.62]],

        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]]]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>HF2_PPS_HAB</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... nan nan nan nan</div><input id='attrs-9666d20c-ab19-4a52-8ba0-38ad8d15c03a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9666d20c-ab19-4a52-8ba0-38ad8d15c03a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-54a1a77d-9e7d-4378-a276-f4ba44958adf' class='xr-var-data-in' type='checkbox'><label for='data-54a1a77d-9e7d-4378-a276-f4ba44958adf' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        ...,

        [[265.81, 265.81, 265.81, ..., 265.81, 265.81, 265.81],
         [265.81, 265.81, 265.81, ..., 265.81, 265.81, 265.81]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]]],

...

       [[[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        ...,

        [[165.77, 165.77, 165.77, ..., 165.77, 165.77, 165.77],
         [165.77, 165.77, 165.77, ..., 165.77, 165.77, 165.77]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]]]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>HF3_PC_CHE</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... nan nan nan nan</div><input id='attrs-3230aabd-fb7a-4c84-a4bd-1085decc8d38' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-3230aabd-fb7a-4c84-a4bd-1085decc8d38' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2f568769-0105-4455-b0af-487812bd391c' class='xr-var-data-in' type='checkbox'><label for='data-2f568769-0105-4455-b0af-487812bd391c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        [[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        [[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        ...,

        [[18.43, 18.43, 18.43, ..., 18.43, 18.43, 18.43],
         [18.43, 18.43, 18.43, ..., 18.43, 18.43, 18.43]],

        [[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        [[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]]],

...

       [[[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        [[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        [[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        ...,

        [[15.88, 15.88, 15.88, ..., 15.88, 15.88, 15.88],
         [15.88, 15.88, 15.88, ..., 15.88, 15.88, 15.88]],

        [[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        [[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]]]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>HF3_PPS_HAB</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... nan nan nan nan</div><input id='attrs-06851c02-b7ad-4eb4-91f5-e18eaf65f1bd' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-06851c02-b7ad-4eb4-91f5-e18eaf65f1bd' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c73e80dc-8986-4b47-8114-4e1675c9ab19' class='xr-var-data-in' type='checkbox'><label for='data-c73e80dc-8986-4b47-8114-4e1675c9ab19' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        ...,

        [[709.19, 709.19, 709.19, ..., 709.19, 709.19, 709.19],
         [709.19, 709.19, 709.19, ..., 709.19, 709.19, 709.19]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]]],

...

       [[[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        ...,

        [[468.46, 468.46, 468.46, ..., 468.46, 468.46, 468.46],
         [468.46, 468.46, 468.46, ..., 468.46, 468.46, 468.46]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]]]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-517773ce-2ac4-4331-a1af-880adff0e90e' class='xr-section-summary-in' type='checkbox'  ><label for='section-517773ce-2ac4-4331-a1af-880adff0e90e' class='xr-section-summary' >Indexes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>nuts2</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-edc9eaec-171b-4894-9952-9a76624aee54' class='xr-index-data-in' type='checkbox'/><label for='index-edc9eaec-171b-4894-9952-9a76624aee54' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, &#x27;AT21&#x27;, &#x27;AT22&#x27;, &#x27;AT31&#x27;, &#x27;AT32&#x27;, &#x27;AT33&#x27;, &#x27;AT34&#x27;,
       &#x27;BE10&#x27;,
       ...
       &#x27;UKK3&#x27;, &#x27;UKK4&#x27;, &#x27;UKL1&#x27;, &#x27;UKL2&#x27;, &#x27;UKM5&#x27;, &#x27;UKM6&#x27;, &#x27;UKM7&#x27;, &#x27;UKM8&#x27;, &#x27;UKM9&#x27;,
       &#x27;UKN0&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;nuts2&#x27;, length=313))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>year</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-434cd117-8b67-43fe-9ed1-9e13e0b91635' class='xr-index-data-in' type='checkbox'/><label for='index-434cd117-8b67-43fe-9ed1-9e13e0b91635' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;1990&#x27;, &#x27;1991&#x27;, &#x27;1992&#x27;, &#x27;1993&#x27;, &#x27;1994&#x27;, &#x27;1995&#x27;, &#x27;1996&#x27;, &#x27;1997&#x27;, &#x27;1998&#x27;,
       &#x27;1999&#x27;, &#x27;2000&#x27;, &#x27;2001&#x27;, &#x27;2002&#x27;, &#x27;2003&#x27;, &#x27;2004&#x27;, &#x27;2005&#x27;, &#x27;2006&#x27;, &#x27;2007&#x27;,
       &#x27;2008&#x27;, &#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;,
       &#x27;2017&#x27;, &#x27;2018&#x27;, &#x27;2019&#x27;, &#x27;2020&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;year&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>sex</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-6b4d0dc1-9845-4179-b547-b18c9ea6f861' class='xr-index-data-in' type='checkbox'/><label for='index-6b4d0dc1-9845-4179-b547-b18c9ea6f861' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;F&#x27;, &#x27;M&#x27;], dtype=&#x27;object&#x27;, name=&#x27;sex&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>age</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-a619df16-7f9d-43f2-8147-1eff437db603' class='xr-index-data-in' type='checkbox'/><label for='index-a619df16-7f9d-43f2-8147-1eff437db603' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 1.0,  2.0,  3.0,  4.0,  5.0,  6.0,  7.0,  8.0,  9.0, 10.0, 11.0, 12.0,
       13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0,
       25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0,
       37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0,
       49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0,
       61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0,
       73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0,
       85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0,
       97.0, 98.0, 99.0],
      dtype=&#x27;float64&#x27;, name=&#x27;age&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-8f41c77f-c56b-4809-b4c0-2c6aa3bfa444' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-8f41c77f-c56b-4809-b4c0-2c6aa3bfa444' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
#+end_export


** deaths
- deaths: https://ec.europa.eu/eurostat/databrowser/view/demo_r_magec/default/table?lang=en


#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('demo_r_magec')
df.rename({'geo\\TIME_PERIOD':'geo'},inplace=True,axis=1)
age_range = ['Y1', 'Y10', 'Y11', 'Y12', 'Y13', 'Y14', 'Y15',
       'Y16', 'Y17', 'Y18', 'Y19', 'Y2', 'Y20', 'Y21', 'Y22', 'Y23',
       'Y24', 'Y25', 'Y26', 'Y27', 'Y28', 'Y29', 'Y3', 'Y30', 'Y31',
       'Y32', 'Y33', 'Y34', 'Y35', 'Y36', 'Y37', 'Y38', 'Y39', 'Y4',
       'Y40', 'Y41', 'Y42', 'Y43', 'Y44', 'Y45', 'Y46', 'Y47', 'Y48',
       'Y49', 'Y5', 'Y50', 'Y51', 'Y52', 'Y53', 'Y54', 'Y55', 'Y56',
       'Y57', 'Y58', 'Y59', 'Y6', 'Y60', 'Y61', 'Y62', 'Y63', 'Y64',
       'Y65', 'Y66', 'Y67', 'Y68', 'Y69', 'Y7', 'Y70', 'Y71', 'Y72',
       'Y73', 'Y74', 'Y75', 'Y76', 'Y77', 'Y78', 'Y79', 'Y8', 'Y80',
       'Y81', 'Y82', 'Y83', 'Y84', 'Y85', 'Y86', 'Y87', 'Y88', 'Y89',
       'Y9', 'Y90', 'Y91', 'Y92', 'Y93', 'Y94', 'Y95', 'Y96', 'Y97',
       'Y98', 'Y99']
df['country_code'] = [x[:2] for x in df['geo']]
df['country'] = df['country_code'].replace(eurostat_dictionary)
df = df[df.country.isin(EU_countries) & \
        (df.sex.isin(["M","F"])) & (df.age.isin(age_range))]
df.drop(['country','country_code'],axis=1,inplace=True)
df = pd.melt(df,id_vars=['geo','sex','age'],
                        value_vars=[str(y) for y in np.arange(1990,2020)],
                        var_name='year',value_name='deaths')
df['nuts'] = [len(x)-2 for x in df.geo]
df = df.query('nuts == 2')
df.drop('nuts',inplace=True, axis=1)
df.rename({'geo':'nuts2', 'age':'age string'},\
          axis=1,inplace=True)
df['age'] = [float(x.replace('Y','')) for x in df['age string']]
df.drop('age string',inplace=True, axis=1)

df.set_index(['nuts2','year','sex','age'],inplace=True)

df.head()
#+end_src

#+RESULTS:
:                     deaths
: nuts2 year sex age        
: AT11  1990 F   1.0     0.0
: AT12  1990 F   1.0     7.0
: AT13  1990 F   1.0     4.0
: AT21  1990 F   1.0     1.0
: AT22  1990 F   1.0     5.0



#+begin_src jupyter-python :display plain
ds = df.to_xarray()
ds.to_netcdf("./data/deaths_nuts_2.nc")
ds
#+end_src

#+RESULTS:
: <xarray.Dataset>
: Dimensions:  (nuts2: 306, year: 30, sex: 2, age: 99)
: Coordinates:
:   * nuts2    (nuts2) object 'AT11' 'AT12' 'AT13' 'AT21' ... 'UKM8' 'UKM9' 'UKN0'
:   * year     (year) object '1990' '1991' '1992' '1993' ... '2017' '2018' '2019'
:   * sex      (sex) object 'F' 'M'
:   * age      (age) float64 1.0 2.0 3.0 4.0 5.0 6.0 ... 95.0 96.0 97.0 98.0 99.0
: Data variables:
:     deaths   (nuts2, year, sex, age) float64 0.0 0.0 1.0 1.0 ... nan nan nan nan


** Poverty measures


*** Severe material deprivation rate by NUTS 2 regions [TGS00104]

- link to the data: https://ec.europa.eu/eurostat/databrowser/view/tgs00104/default/table?lang=en

#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('tgs00104')
df.rename({'geo\\TIME_PERIOD':'nuts2'},inplace=True,axis=1)
df = df[(df.unit == "PC")]
df.drop(["unit"],axis=1,inplace=True)
df['nuts'] = [len(x)-2 for x in df.nuts2]
df = df[df.nuts == 2]
df.drop('nuts',axis=1,inplace=True)

df = pd.melt(df,id_vars=['nuts2'],
                        value_vars=[str(y) for y in np.arange(2009,2021)],
                        var_name='year',\
             value_name='percentage_material_deprivation')
df.set_index(['nuts2','year'],inplace=True)
df.head()
#+end_src

#+RESULTS:
:             percentage_material_deprivation
: nuts2 year                                 
: AL01  2009                              NaN
: AL02  2009                              NaN
: AL03  2009                              NaN
: AT11  2009                              NaN
: AT12  2009                              NaN


#+begin_src jupyter-python 
ds_material_deprivation = df.to_xarray()
ds_material_deprivation.to_netcdf("./data/material_deprivation_nuts_2.nc")
ds_material_deprivation
#+end_src

#+RESULTS:
#+begin_export html
<div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewBox="0 0 32 32">
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewBox="0 0 32 32">
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

html[theme=dark],
body[data-theme=dark],
body.vscode-dark {
  --xr-font-color0: rgba(255, 255, 255, 1);
  --xr-font-color2: rgba(255, 255, 255, 0.54);
  --xr-font-color3: rgba(255, 255, 255, 0.38);
  --xr-border-color: #1F1F1F;
  --xr-disabled-color: #515151;
  --xr-background-color: #111111;
  --xr-background-color-row-even: #111111;
  --xr-background-color-row-odd: #313131;
}

.xr-wrap {
  display: block !important;
  min-width: 300px;
  max-width: 700px;
}

.xr-text-repr-fallback {
  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
  display: none;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-index-preview {
  grid-column: 2 / 5;
  color: var(--xr-font-color2);
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt,
.xr-attrs dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt;
Dimensions:                          (nuts2: 179, year: 12)
Coordinates:
  * nuts2                            (nuts2) object &#x27;AL01&#x27; &#x27;AL02&#x27; ... &#x27;SK04&#x27;
  * year                             (year) object &#x27;2009&#x27; &#x27;2010&#x27; ... &#x27;2020&#x27;
Data variables:
    percentage_material_deprivation  (nuts2, year) float64 nan nan ... 9.6 8.3</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-3825fa09-6583-4b2e-ba54-28f031427bbe' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-3825fa09-6583-4b2e-ba54-28f031427bbe' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>nuts2</span>: 179</li><li><span class='xr-has-index'>year</span>: 12</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-07db464d-ea6e-4c2d-b2fd-e8337f769fd9' class='xr-section-summary-in' type='checkbox'  checked><label for='section-07db464d-ea6e-4c2d-b2fd-e8337f769fd9' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>nuts2</span></div><div class='xr-var-dims'>(nuts2)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AL01&#x27; &#x27;AL02&#x27; ... &#x27;SK03&#x27; &#x27;SK04&#x27;</div><input id='attrs-e210fd6f-31ba-4410-ba4c-b5a7e7275828' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e210fd6f-31ba-4410-ba4c-b5a7e7275828' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-23c20882-64a9-4ef5-8a92-992477de3503' class='xr-var-data-in' type='checkbox'><label for='data-23c20882-64a9-4ef5-8a92-992477de3503' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, &#x27;AT21&#x27;, &#x27;AT22&#x27;, &#x27;AT31&#x27;,
       &#x27;AT32&#x27;, &#x27;AT33&#x27;, &#x27;AT34&#x27;, &#x27;BG31&#x27;, &#x27;BG32&#x27;, &#x27;BG33&#x27;, &#x27;BG34&#x27;, &#x27;BG41&#x27;, &#x27;BG42&#x27;,
       &#x27;CH01&#x27;, &#x27;CH02&#x27;, &#x27;CH03&#x27;, &#x27;CH04&#x27;, &#x27;CH05&#x27;, &#x27;CH06&#x27;, &#x27;CH07&#x27;, &#x27;CZ01&#x27;, &#x27;CZ02&#x27;,
       &#x27;CZ03&#x27;, &#x27;CZ04&#x27;, &#x27;CZ05&#x27;, &#x27;CZ06&#x27;, &#x27;CZ07&#x27;, &#x27;CZ08&#x27;, &#x27;DK01&#x27;, &#x27;DK02&#x27;, &#x27;DK03&#x27;,
       &#x27;DK04&#x27;, &#x27;DK05&#x27;, &#x27;EL30&#x27;, &#x27;EL41&#x27;, &#x27;EL42&#x27;, &#x27;EL43&#x27;, &#x27;EL51&#x27;, &#x27;EL52&#x27;, &#x27;EL53&#x27;,
       &#x27;EL54&#x27;, &#x27;EL61&#x27;, &#x27;EL62&#x27;, &#x27;EL63&#x27;, &#x27;EL64&#x27;, &#x27;EL65&#x27;, &#x27;ES11&#x27;, &#x27;ES12&#x27;, &#x27;ES13&#x27;,
       &#x27;ES21&#x27;, &#x27;ES22&#x27;, &#x27;ES23&#x27;, &#x27;ES24&#x27;, &#x27;ES30&#x27;, &#x27;ES41&#x27;, &#x27;ES42&#x27;, &#x27;ES43&#x27;, &#x27;ES51&#x27;,
       &#x27;ES52&#x27;, &#x27;ES53&#x27;, &#x27;ES61&#x27;, &#x27;ES62&#x27;, &#x27;ES63&#x27;, &#x27;ES64&#x27;, &#x27;ES70&#x27;, &#x27;FI1B&#x27;, &#x27;FI1C&#x27;,
       &#x27;FI1D&#x27;, &#x27;HR03&#x27;, &#x27;HR04&#x27;, &#x27;HU10&#x27;, &#x27;HU11&#x27;, &#x27;HU12&#x27;, &#x27;HU21&#x27;, &#x27;HU22&#x27;, &#x27;HU23&#x27;,
       &#x27;HU31&#x27;, &#x27;HU32&#x27;, &#x27;HU33&#x27;, &#x27;IE01&#x27;, &#x27;IE02&#x27;, &#x27;IE04&#x27;, &#x27;IE05&#x27;, &#x27;IE06&#x27;, &#x27;ITC1&#x27;,
       &#x27;ITC2&#x27;, &#x27;ITC3&#x27;, &#x27;ITC4&#x27;, &#x27;ITF1&#x27;, &#x27;ITF2&#x27;, &#x27;ITF3&#x27;, &#x27;ITF4&#x27;, &#x27;ITF5&#x27;, &#x27;ITF6&#x27;,
       &#x27;ITG1&#x27;, &#x27;ITG2&#x27;, &#x27;ITH1&#x27;, &#x27;ITH2&#x27;, &#x27;ITH3&#x27;, &#x27;ITH4&#x27;, &#x27;ITH5&#x27;, &#x27;ITI1&#x27;, &#x27;ITI2&#x27;,
       &#x27;ITI3&#x27;, &#x27;ITI4&#x27;, &#x27;LT01&#x27;, &#x27;LT02&#x27;, &#x27;NL11&#x27;, &#x27;NL12&#x27;, &#x27;NL13&#x27;, &#x27;NL21&#x27;, &#x27;NL22&#x27;,
       &#x27;NL23&#x27;, &#x27;NL31&#x27;, &#x27;NL32&#x27;, &#x27;NL33&#x27;, &#x27;NL34&#x27;, &#x27;NL41&#x27;, &#x27;NL42&#x27;, &#x27;NO01&#x27;, &#x27;NO02&#x27;,
       &#x27;NO03&#x27;, &#x27;NO04&#x27;, &#x27;NO05&#x27;, &#x27;NO06&#x27;, &#x27;NO07&#x27;, &#x27;PL21&#x27;, &#x27;PL22&#x27;, &#x27;PL41&#x27;, &#x27;PL42&#x27;,
       &#x27;PL43&#x27;, &#x27;PL51&#x27;, &#x27;PL52&#x27;, &#x27;PL61&#x27;, &#x27;PL62&#x27;, &#x27;PL63&#x27;, &#x27;PL71&#x27;, &#x27;PL72&#x27;, &#x27;PL81&#x27;,
       &#x27;PL82&#x27;, &#x27;PL84&#x27;, &#x27;PL91&#x27;, &#x27;PL92&#x27;, &#x27;PT11&#x27;, &#x27;PT15&#x27;, &#x27;PT16&#x27;, &#x27;PT17&#x27;, &#x27;PT18&#x27;,
       &#x27;PT20&#x27;, &#x27;PT30&#x27;, &#x27;RO11&#x27;, &#x27;RO12&#x27;, &#x27;RO21&#x27;, &#x27;RO22&#x27;, &#x27;RO31&#x27;, &#x27;RO32&#x27;, &#x27;RO41&#x27;,
       &#x27;RO42&#x27;, &#x27;SE11&#x27;, &#x27;SE12&#x27;, &#x27;SE21&#x27;, &#x27;SE22&#x27;, &#x27;SE23&#x27;, &#x27;SE31&#x27;, &#x27;SE32&#x27;, &#x27;SE33&#x27;,
       &#x27;SI01&#x27;, &#x27;SI02&#x27;, &#x27;SI03&#x27;, &#x27;SI04&#x27;, &#x27;SK01&#x27;, &#x27;SK02&#x27;, &#x27;SK03&#x27;, &#x27;SK04&#x27;],
      dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>year</span></div><div class='xr-var-dims'>(year)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;2009&#x27; &#x27;2010&#x27; ... &#x27;2019&#x27; &#x27;2020&#x27;</div><input id='attrs-410ad49b-d242-4233-bba2-3888bbf99f50' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-410ad49b-d242-4233-bba2-3888bbf99f50' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-876ebe85-8017-4c78-82a3-22062db5e918' class='xr-var-data-in' type='checkbox'><label for='data-876ebe85-8017-4c78-82a3-22062db5e918' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;, &#x27;2017&#x27;,
       &#x27;2018&#x27;, &#x27;2019&#x27;, &#x27;2020&#x27;], dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-4cda9871-1213-4215-b1f4-10fbcd48c806' class='xr-section-summary-in' type='checkbox'  checked><label for='section-4cda9871-1213-4215-b1f4-10fbcd48c806' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>percentage_material_deprivation</span></div><div class='xr-var-dims'>(nuts2, year)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... 10.0 9.6 8.3</div><input id='attrs-5198c3ff-0805-4c08-8f4e-79367869e936' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5198c3ff-0805-4c08-8f4e-79367869e936' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9f24b0c1-e55a-4d5d-9640-5a695435ca6c' class='xr-var-data-in' type='checkbox'><label for='data-9f24b0c1-e55a-4d5d-9640-5a695435ca6c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ nan,  nan,  nan, ..., 38.6, 38.5, 36.6],
       [ nan,  nan,  nan, ..., 40.4, 37.7, 35.1],
       [ nan,  nan,  nan, ..., 35.3, 34.9, 32.2],
       ...,
       [10.3,  9.8,  8.6, ...,  4.2,  5.6,  3.6],
       [11.1, 10.6, 10.7, ...,  9.1, 10.6,  8.1],
       [13.5, 15. , 12.3, ..., 10. ,  9.6,  8.3]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-eb76d750-b358-4994-bc3a-629e1e433fd9' class='xr-section-summary-in' type='checkbox'  ><label for='section-eb76d750-b358-4994-bc3a-629e1e433fd9' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>nuts2</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-268ed68e-7416-4223-bf32-f89ce68bc59e' class='xr-index-data-in' type='checkbox'/><label for='index-268ed68e-7416-4223-bf32-f89ce68bc59e' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, &#x27;AT21&#x27;, &#x27;AT22&#x27;, &#x27;AT31&#x27;,
       &#x27;AT32&#x27;,
       ...
       &#x27;SE32&#x27;, &#x27;SE33&#x27;, &#x27;SI01&#x27;, &#x27;SI02&#x27;, &#x27;SI03&#x27;, &#x27;SI04&#x27;, &#x27;SK01&#x27;, &#x27;SK02&#x27;, &#x27;SK03&#x27;,
       &#x27;SK04&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;nuts2&#x27;, length=179))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>year</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-5f162adc-343b-4257-b863-067950609153' class='xr-index-data-in' type='checkbox'/><label for='index-5f162adc-343b-4257-b863-067950609153' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;, &#x27;2017&#x27;,
       &#x27;2018&#x27;, &#x27;2019&#x27;, &#x27;2020&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;year&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-ab3c071b-739d-41c1-a579-90a652d8acaa' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-ab3c071b-739d-41c1-a579-90a652d8acaa' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
#+end_export

*** At-risk-of-poverty rate by NUTS 2 regions [TGS00103]

- link to the data: https://ec.europa.eu/eurostat/databrowser/view/tgs00103/default/table?lang=en


#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('tgs00103')
df.rename({'geo\\TIME_PERIOD':'nuts2'},inplace=True,axis=1)
df = df[(df.unit == "PC_POP")]
df.drop(["unit"],axis=1,inplace=True)
df['nuts'] = [len(x)-2 for x in df.nuts2]
df = df[df.nuts == 2]
df.drop('nuts',axis=1,inplace=True)

df = pd.melt(df,id_vars=['nuts2'],
                        value_vars=[str(y) for y in np.arange(2012,2022)],
                        var_name='year',
             value_name='at risk of poverty')
df.set_index(['nuts2','year'],inplace=True)
df.head()
#+end_src

#+RESULTS:
:             at risk of poverty
: nuts2 year                    
: AL01  2012                 NaN
: AL02  2012                 NaN
: AL03  2012                 NaN
: BE10  2012                 NaN
: BE21  2012                 NaN


#+begin_src jupyter-python 
ds_at_risk_of_poverty = df.to_xarray()
ds_at_risk_of_poverty.to_netcdf("./data/at_risk_of_poverty_nuts_2.nc")
ds_at_risk_of_poverty
#+end_src

#+RESULTS:
#+begin_export html
<div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewBox="0 0 32 32">
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewBox="0 0 32 32">
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

html[theme=dark],
body[data-theme=dark],
body.vscode-dark {
  --xr-font-color0: rgba(255, 255, 255, 1);
  --xr-font-color2: rgba(255, 255, 255, 0.54);
  --xr-font-color3: rgba(255, 255, 255, 0.38);
  --xr-border-color: #1F1F1F;
  --xr-disabled-color: #515151;
  --xr-background-color: #111111;
  --xr-background-color-row-even: #111111;
  --xr-background-color-row-odd: #313131;
}

.xr-wrap {
  display: block !important;
  min-width: 300px;
  max-width: 700px;
}

.xr-text-repr-fallback {
  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
  display: none;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-index-preview {
  grid-column: 2 / 5;
  color: var(--xr-font-color2);
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt,
.xr-attrs dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt;
Dimensions:             (nuts2: 249, year: 10)
Coordinates:
  * nuts2               (nuts2) object &#x27;AL01&#x27; &#x27;AL02&#x27; &#x27;AL03&#x27; ... &#x27;SK03&#x27; &#x27;SK04&#x27;
  * year                (year) object &#x27;2012&#x27; &#x27;2013&#x27; &#x27;2014&#x27; ... &#x27;2020&#x27; &#x27;2021&#x27;
Data variables:
    at risk of poverty  (nuts2, year) float64 nan nan nan nan ... 17.0 16.5 17.7</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-9e0ea280-ea73-4816-94d2-e4a93f2ada59' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-9e0ea280-ea73-4816-94d2-e4a93f2ada59' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>nuts2</span>: 249</li><li><span class='xr-has-index'>year</span>: 10</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-9fc00494-e98b-4cfa-ba56-9837d72d9ff3' class='xr-section-summary-in' type='checkbox'  checked><label for='section-9fc00494-e98b-4cfa-ba56-9837d72d9ff3' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>nuts2</span></div><div class='xr-var-dims'>(nuts2)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AL01&#x27; &#x27;AL02&#x27; ... &#x27;SK03&#x27; &#x27;SK04&#x27;</div><input id='attrs-62ad0666-6ad2-44a0-9d95-c6ad84c2656f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-62ad0666-6ad2-44a0-9d95-c6ad84c2656f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6b6dd7cf-344b-4815-84c5-0f3993fcdca9' class='xr-var-data-in' type='checkbox'><label for='data-6b6dd7cf-344b-4815-84c5-0f3993fcdca9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, ..., &#x27;SK02&#x27;, &#x27;SK03&#x27;, &#x27;SK04&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>year</span></div><div class='xr-var-dims'>(year)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;2012&#x27; &#x27;2013&#x27; ... &#x27;2020&#x27; &#x27;2021&#x27;</div><input id='attrs-25c104ea-12f5-49cc-bd6e-209a7117807f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-25c104ea-12f5-49cc-bd6e-209a7117807f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b88ba298-a59d-4ffc-8231-e9b1e44ecc0b' class='xr-var-data-in' type='checkbox'><label for='data-b88ba298-a59d-4ffc-8231-e9b1e44ecc0b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;, &#x27;2017&#x27;, &#x27;2018&#x27;, &#x27;2019&#x27;, &#x27;2020&#x27;,
       &#x27;2021&#x27;], dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-b26e7c5c-45b2-4549-87b1-f5647500c6b4' class='xr-section-summary-in' type='checkbox'  checked><label for='section-b26e7c5c-45b2-4549-87b1-f5647500c6b4' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>at risk of poverty</span></div><div class='xr-var-dims'>(nuts2, year)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... 17.0 16.5 17.7</div><input id='attrs-c6aa15e9-974b-4be9-8ca2-5b19ec3cf39d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c6aa15e9-974b-4be9-8ca2-5b19ec3cf39d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7a1076db-c6e5-4d8c-bc5a-ff4cc1061ac5' class='xr-var-data-in' type='checkbox'><label for='data-7a1076db-c6e5-4d8c-bc5a-ff4cc1061ac5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ nan,  nan,  nan, ..., 25.9, 25.1, 25.5],
       [ nan,  nan,  nan, ..., 22.7, 21.3, 21.2],
       [ nan,  nan,  nan, ..., 20.8, 19.5, 19.9],
       ...,
       [11.9, 11.5, 10.4, ...,  7.4,  7.1,  8. ],
       [14.1, 13.3, 15.3, ..., 15.6, 14.8, 15.6],
       [16.7, 15.8, 14.9, ..., 17. , 16.5, 17.7]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-e87fda35-5781-4be0-8dd8-4629c5aad215' class='xr-section-summary-in' type='checkbox'  ><label for='section-e87fda35-5781-4be0-8dd8-4629c5aad215' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>nuts2</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-83e7261a-6a69-4734-b0c1-f85355f08eed' class='xr-index-data-in' type='checkbox'/><label for='index-83e7261a-6a69-4734-b0c1-f85355f08eed' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;BE10&#x27;, &#x27;BE21&#x27;, &#x27;BE22&#x27;, &#x27;BE23&#x27;, &#x27;BE24&#x27;, &#x27;BE25&#x27;,
       &#x27;BE31&#x27;,
       ...
       &#x27;SE32&#x27;, &#x27;SE33&#x27;, &#x27;SI01&#x27;, &#x27;SI02&#x27;, &#x27;SI03&#x27;, &#x27;SI04&#x27;, &#x27;SK01&#x27;, &#x27;SK02&#x27;, &#x27;SK03&#x27;,
       &#x27;SK04&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;nuts2&#x27;, length=249))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>year</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-41911374-2922-4e17-9edd-7dbbf4cd60c1' class='xr-index-data-in' type='checkbox'/><label for='index-41911374-2922-4e17-9edd-7dbbf4cd60c1' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;, &#x27;2017&#x27;, &#x27;2018&#x27;, &#x27;2019&#x27;, &#x27;2020&#x27;,
       &#x27;2021&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;year&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-e9e87431-8516-48ec-8367-215f0862b27e' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-e9e87431-8516-48ec-8367-215f0862b27e' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
#+end_export

** unmet needs



Self-reported unmet needs for medical examination by main reason declared and NUTS 2 regions

- link to the data: https://ec.europa.eu/eurostat/databrowser/view/hlth_silc_08_r/default/table?lang=en
- https://ec.europa.eu/eurostat/documents/1012329/6070906/Personal+data+-+health+PH.pdf/7edfec40-462a-4cb2-a5fc-8d8845000ca4

| value   |                                                         |
|---------+---------------------------------------------------------|
| TOOEXP  | Too expensive                                           |
| TOOFAR  | Too far to travel                                       |
| NOTIME  | No time                                                 |
| NOKNOW  | Didn't know any good doctor or specialist               |
| WAITING | Waiting list                                            |
| FEAR    | Fear of doctor, hospital, examination or treatment      |
| HOPING  | Wanted to wait and see if problem got better on its own |
| OTH     | Other reason                                            |



#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('hlth_silc_08_r')
df.rename({'geo\\TIME_PERIOD':'nuts2'},inplace=True,axis=1)
df.drop(["unit"],axis=1,inplace=True)
df['nuts'] = [len(x)-2 for x in df.nuts2]
df = df[df.nuts == 2]
df.drop('nuts',axis=1,inplace=True)
columns = ['FEAR','TOOEXP','TOOFAR','WAITING',\
           'HOPING', 'NOTIME', 'NOKNOW','OTH']
df=df[df.reason.isin(columns)]
df = pd.melt(df,id_vars=['nuts2','reason'],
                        value_vars=[str(y) for y in np.arange(2009,2021)],
                        var_name='year',\
             value_name='unmet needs')
df.set_index(['nuts2','year','reason'],inplace=True)

df = df.unstack()
df.columns = df.columns.droplevel()
df['UNMET'] = df[columns].sum(axis=1)
df.drop(['FEAR','TOOFAR','WAITING',\
           'HOPING', 'NOTIME', 'NOKNOW','OTH'],axis=1,inplace=True)
df.tail()
#+end_src

#+RESULTS:
: reason      TOOEXP  UNMET
: nuts2 year               
: SK04  2016     0.5    8.1
:       2017     0.2    5.9
:       2018     0.4    6.5
:       2019     0.4    6.9
:       2020     0.2    7.5


#+begin_src jupyter-python 
ds_unmet_needs = df.to_xarray()
ds_unmet_needs.to_netcdf("./data/unmet_needs_nuts_2.nc")
ds_unmet_needs
#+end_src

#+RESULTS:
#+begin_export html
<div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewBox="0 0 32 32">
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewBox="0 0 32 32">
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

html[theme=dark],
body[data-theme=dark],
body.vscode-dark {
  --xr-font-color0: rgba(255, 255, 255, 1);
  --xr-font-color2: rgba(255, 255, 255, 0.54);
  --xr-font-color3: rgba(255, 255, 255, 0.38);
  --xr-border-color: #1F1F1F;
  --xr-disabled-color: #515151;
  --xr-background-color: #111111;
  --xr-background-color-row-even: #111111;
  --xr-background-color-row-odd: #313131;
}

.xr-wrap {
  display: block !important;
  min-width: 300px;
  max-width: 700px;
}

.xr-text-repr-fallback {
  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
  display: none;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-index-preview {
  grid-column: 2 / 5;
  color: var(--xr-font-color2);
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt,
.xr-attrs dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt;
Dimensions:  (nuts2: 157, year: 12)
Coordinates:
  * nuts2    (nuts2) object &#x27;AL01&#x27; &#x27;AL02&#x27; &#x27;AL03&#x27; &#x27;BG31&#x27; ... &#x27;SK02&#x27; &#x27;SK03&#x27; &#x27;SK04&#x27;
  * year     (year) object &#x27;2009&#x27; &#x27;2010&#x27; &#x27;2011&#x27; &#x27;2012&#x27; ... &#x27;2018&#x27; &#x27;2019&#x27; &#x27;2020&#x27;
Data variables:
    TOOEXP   (nuts2, year) float64 nan nan nan nan nan ... 0.5 0.2 0.4 0.4 0.2
    UNMET    (nuts2, year) float64 0.0 0.0 0.0 0.0 0.0 ... 8.1 5.9 6.5 6.9 7.5</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-712d1bfe-5735-4b18-a600-9f4dfffac544' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-712d1bfe-5735-4b18-a600-9f4dfffac544' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>nuts2</span>: 157</li><li><span class='xr-has-index'>year</span>: 12</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-d1a4f9b3-5f14-4304-b39b-a9dfc84a119b' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d1a4f9b3-5f14-4304-b39b-a9dfc84a119b' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>nuts2</span></div><div class='xr-var-dims'>(nuts2)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AL01&#x27; &#x27;AL02&#x27; ... &#x27;SK03&#x27; &#x27;SK04&#x27;</div><input id='attrs-1319e483-0c2c-4073-aff6-d96dd3031be0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-1319e483-0c2c-4073-aff6-d96dd3031be0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f7112c35-510a-4927-9733-f128676d5f45' class='xr-var-data-in' type='checkbox'><label for='data-f7112c35-510a-4927-9733-f128676d5f45' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;BG31&#x27;, &#x27;BG32&#x27;, &#x27;BG33&#x27;, &#x27;BG34&#x27;, &#x27;BG41&#x27;, &#x27;BG42&#x27;,
       &#x27;CH01&#x27;, &#x27;CH02&#x27;, &#x27;CH03&#x27;, &#x27;CH04&#x27;, &#x27;CH05&#x27;, &#x27;CH06&#x27;, &#x27;CH07&#x27;, &#x27;CZ01&#x27;, &#x27;CZ02&#x27;,
       &#x27;CZ03&#x27;, &#x27;CZ04&#x27;, &#x27;CZ05&#x27;, &#x27;CZ06&#x27;, &#x27;CZ07&#x27;, &#x27;CZ08&#x27;, &#x27;DK01&#x27;, &#x27;DK02&#x27;, &#x27;DK03&#x27;,
       &#x27;DK04&#x27;, &#x27;DK05&#x27;, &#x27;EL30&#x27;, &#x27;EL41&#x27;, &#x27;EL42&#x27;, &#x27;EL43&#x27;, &#x27;EL51&#x27;, &#x27;EL52&#x27;, &#x27;EL53&#x27;,
       &#x27;EL54&#x27;, &#x27;EL61&#x27;, &#x27;EL62&#x27;, &#x27;EL63&#x27;, &#x27;EL64&#x27;, &#x27;EL65&#x27;, &#x27;ES11&#x27;, &#x27;ES12&#x27;, &#x27;ES13&#x27;,
       &#x27;ES21&#x27;, &#x27;ES22&#x27;, &#x27;ES23&#x27;, &#x27;ES24&#x27;, &#x27;ES30&#x27;, &#x27;ES41&#x27;, &#x27;ES42&#x27;, &#x27;ES43&#x27;, &#x27;ES51&#x27;,
       &#x27;ES52&#x27;, &#x27;ES53&#x27;, &#x27;ES61&#x27;, &#x27;ES62&#x27;, &#x27;ES63&#x27;, &#x27;ES64&#x27;, &#x27;ES70&#x27;, &#x27;FI1B&#x27;, &#x27;FI1C&#x27;,
       &#x27;FI1D&#x27;, &#x27;HR02&#x27;, &#x27;HR03&#x27;, &#x27;HR04&#x27;, &#x27;HR05&#x27;, &#x27;HR06&#x27;, &#x27;HU10&#x27;, &#x27;HU11&#x27;, &#x27;HU12&#x27;,
       &#x27;HU21&#x27;, &#x27;HU22&#x27;, &#x27;HU23&#x27;, &#x27;HU31&#x27;, &#x27;HU32&#x27;, &#x27;HU33&#x27;, &#x27;IE01&#x27;, &#x27;IE02&#x27;, &#x27;IE04&#x27;,
       &#x27;IE05&#x27;, &#x27;IE06&#x27;, &#x27;ITC1&#x27;, &#x27;ITC2&#x27;, &#x27;ITC3&#x27;, &#x27;ITC4&#x27;, &#x27;ITF1&#x27;, &#x27;ITF2&#x27;, &#x27;ITF3&#x27;,
       &#x27;ITF4&#x27;, &#x27;ITF5&#x27;, &#x27;ITF6&#x27;, &#x27;ITG1&#x27;, &#x27;ITG2&#x27;, &#x27;ITH1&#x27;, &#x27;ITH2&#x27;, &#x27;ITH3&#x27;, &#x27;ITH4&#x27;,
       &#x27;ITH5&#x27;, &#x27;ITI1&#x27;, &#x27;ITI2&#x27;, &#x27;ITI3&#x27;, &#x27;ITI4&#x27;, &#x27;LT01&#x27;, &#x27;LT02&#x27;, &#x27;NO01&#x27;, &#x27;NO02&#x27;,
       &#x27;NO03&#x27;, &#x27;NO04&#x27;, &#x27;NO05&#x27;, &#x27;NO06&#x27;, &#x27;NO07&#x27;, &#x27;NO08&#x27;, &#x27;NO09&#x27;, &#x27;NO0A&#x27;, &#x27;PL21&#x27;,
       &#x27;PL22&#x27;, &#x27;PL41&#x27;, &#x27;PL42&#x27;, &#x27;PL43&#x27;, &#x27;PL51&#x27;, &#x27;PL52&#x27;, &#x27;PL61&#x27;, &#x27;PL62&#x27;, &#x27;PL63&#x27;,
       &#x27;PL71&#x27;, &#x27;PL72&#x27;, &#x27;PL81&#x27;, &#x27;PL82&#x27;, &#x27;PL84&#x27;, &#x27;PL91&#x27;, &#x27;PL92&#x27;, &#x27;RO11&#x27;, &#x27;RO12&#x27;,
       &#x27;RO21&#x27;, &#x27;RO22&#x27;, &#x27;RO31&#x27;, &#x27;RO32&#x27;, &#x27;RO41&#x27;, &#x27;RO42&#x27;, &#x27;SE11&#x27;, &#x27;SE12&#x27;, &#x27;SE21&#x27;,
       &#x27;SE22&#x27;, &#x27;SE23&#x27;, &#x27;SE31&#x27;, &#x27;SE32&#x27;, &#x27;SE33&#x27;, &#x27;SI01&#x27;, &#x27;SI02&#x27;, &#x27;SI03&#x27;, &#x27;SI04&#x27;,
       &#x27;SK01&#x27;, &#x27;SK02&#x27;, &#x27;SK03&#x27;, &#x27;SK04&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>year</span></div><div class='xr-var-dims'>(year)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;2009&#x27; &#x27;2010&#x27; ... &#x27;2019&#x27; &#x27;2020&#x27;</div><input id='attrs-536c465e-a1b1-4bc3-8339-b9771bcd0348' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-536c465e-a1b1-4bc3-8339-b9771bcd0348' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-80d71db1-541b-42aa-8730-733536977f2b' class='xr-var-data-in' type='checkbox'><label for='data-80d71db1-541b-42aa-8730-733536977f2b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;, &#x27;2017&#x27;,
       &#x27;2018&#x27;, &#x27;2019&#x27;, &#x27;2020&#x27;], dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-f181c5b4-a3af-4d7e-bd40-e9af67cae6ff' class='xr-section-summary-in' type='checkbox'  checked><label for='section-f181c5b4-a3af-4d7e-bd40-e9af67cae6ff' class='xr-section-summary' >Data variables: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>TOOEXP</span></div><div class='xr-var-dims'>(nuts2, year)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... 0.2 0.4 0.4 0.2</div><input id='attrs-c6e5dc47-3177-4d28-8532-932033010dbd' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c6e5dc47-3177-4d28-8532-932033010dbd' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-948df2e2-5b87-4d93-8855-808f6346daea' class='xr-var-data-in' type='checkbox'><label for='data-948df2e2-5b87-4d93-8855-808f6346daea' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ nan,  nan,  nan, ..., 18.9, 21.8, 12. ],
       [ nan,  nan,  nan, ..., 12.3,  9.3,  7.6],
       [ nan,  nan,  nan, ..., 10.8, 11.6,  8.5],
       ...,
       [ 0.6,  0.8,  1. , ...,  0.4,  0.4,  0.7],
       [ 0.6,  0.6,  0.5, ...,  1.1,  1.1,  1.6],
       [ 0.7,  0.8,  0.8, ...,  0.4,  0.4,  0.2]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>UNMET</span></div><div class='xr-var-dims'>(nuts2, year)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.0 0.0 ... 5.9 6.5 6.9 7.5</div><input id='attrs-b119eced-6fe7-4cd6-b82c-6e4a9aad00f1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b119eced-6fe7-4cd6-b82c-6e4a9aad00f1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2d160245-9ed5-4ab8-be33-2ab0c857448d' class='xr-var-data-in' type='checkbox'><label for='data-2d160245-9ed5-4ab8-be33-2ab0c857448d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 0. ,  0. ,  0. , ..., 26.5, 26.9, 21. ],
       [ 0. ,  0. ,  0. , ..., 20.9, 15. , 11.4],
       [ 0. ,  0. ,  0. , ..., 17.6, 24.4, 15.5],
       ...,
       [ 5.9,  6.5,  6.3, ...,  4.4,  4.1,  3.9],
       [ 3.7,  5.4,  4.9, ..., 10.1,  9.6, 14.6],
       [ 4.1,  4.7,  5.9, ...,  6.5,  6.9,  7.5]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-887d2a75-fbe0-44d4-851d-544061a26123' class='xr-section-summary-in' type='checkbox'  ><label for='section-887d2a75-fbe0-44d4-851d-544061a26123' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>nuts2</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-293de1d6-94e5-40e8-a101-3970e29b50b8' class='xr-index-data-in' type='checkbox'/><label for='index-293de1d6-94e5-40e8-a101-3970e29b50b8' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;BG31&#x27;, &#x27;BG32&#x27;, &#x27;BG33&#x27;, &#x27;BG34&#x27;, &#x27;BG41&#x27;, &#x27;BG42&#x27;,
       &#x27;CH01&#x27;,
       ...
       &#x27;SE32&#x27;, &#x27;SE33&#x27;, &#x27;SI01&#x27;, &#x27;SI02&#x27;, &#x27;SI03&#x27;, &#x27;SI04&#x27;, &#x27;SK01&#x27;, &#x27;SK02&#x27;, &#x27;SK03&#x27;,
       &#x27;SK04&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;nuts2&#x27;, length=157))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>year</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-d3eea103-26ba-41a8-aa49-707451b0e4d3' class='xr-index-data-in' type='checkbox'/><label for='index-d3eea103-26ba-41a8-aa49-707451b0e4d3' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;, &#x27;2017&#x27;,
       &#x27;2018&#x27;, &#x27;2019&#x27;, &#x27;2020&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;year&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-12cdd3f5-64b2-4f23-8706-576c933e24d6' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-12cdd3f5-64b2-4f23-8706-576c933e24d6' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
#+end_export


** infant mortality
- https://ec.europa.eu/eurostat/databrowser/view/DEMO_R_MINFIND/default/table?lang=en&category=demo.demomreg
- https://ec.europa.eu/health/indicators/docs/echi_11.pdf
- The number of deaths of infants (younger than one year of age at death) per 1000 live births (based on one year data).


#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('demo_r_minfind')
df.rename({'geo\\TIME_PERIOD':'nuts2'},inplace=True,axis=1)
df.drop(["unit"],axis=1,inplace=True)
df['nuts'] = [len(x)-2 for x in df.nuts2]
df = df[df.nuts == 2]
df.drop('nuts',axis=1,inplace=True)
df = pd.melt(df,id_vars=['nuts2'],
                        value_vars=[str(y) for y in np.arange(2009,2022)],
                        var_name='year',\
             value_name='infant mortality')
df.set_index(['nuts2','year'],inplace=True)

df.head()
#+end_src

#+RESULTS:
:             infant mortality
: nuts2 year                  
: AL01  2009               NaN
: AL02  2009               NaN
: AL03  2009               NaN
: AT11  2009               0.9
: AT12  2009               4.2


#+begin_src jupyter-python 
ds_infant_mortality = df.to_xarray()
ds_infant_mortality.to_netcdf("./data/infant_mortality_nuts_2.nc")
ds_infant_mortality
#+end_src

#+RESULTS:
#+begin_export html
<div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewBox="0 0 32 32">
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewBox="0 0 32 32">
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

html[theme="dark"],
html[data-theme="dark"],
body[data-theme="dark"],
body.vscode-dark {
  --xr-font-color0: rgba(255, 255, 255, 1);
  --xr-font-color2: rgba(255, 255, 255, 0.54);
  --xr-font-color3: rgba(255, 255, 255, 0.38);
  --xr-border-color: #1f1f1f;
  --xr-disabled-color: #515151;
  --xr-background-color: #111111;
  --xr-background-color-row-even: #111111;
  --xr-background-color-row-odd: #313131;
}

.xr-wrap {
  display: block !important;
  min-width: 300px;
  max-width: 700px;
}

.xr-text-repr-fallback {
  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
  display: none;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: inline-block;
  opacity: 0;
  height: 0;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:focus + label {
  border: 2px solid var(--xr-font-color0);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: "►";
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: "▼";
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: "(";
}

.xr-dim-list:after {
  content: ")";
}

.xr-dim-list li:not(:last-child):after {
  content: ",";
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-index-preview {
  grid-column: 2 / 5;
  color: var(--xr-font-color2);
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt,
.xr-attrs dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 38kB
Dimensions:           (nuts2: 340, year: 13)
Coordinates:
  * nuts2             (nuts2) object 3kB &#x27;AL01&#x27; &#x27;AL02&#x27; &#x27;AL03&#x27; ... &#x27;UKM9&#x27; &#x27;UKN0&#x27;
  * year              (year) object 104B &#x27;2009&#x27; &#x27;2010&#x27; &#x27;2011&#x27; ... &#x27;2020&#x27; &#x27;2021&#x27;
Data variables:
    infant mortality  (nuts2, year) float64 35kB nan nan nan nan ... nan nan nan</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-cb2d3eba-ec47-4c08-a608-0e1c0d54efb3' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-cb2d3eba-ec47-4c08-a608-0e1c0d54efb3' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>nuts2</span>: 340</li><li><span class='xr-has-index'>year</span>: 13</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-adb3d6fa-4d1f-48ea-a3b5-1581710a4129' class='xr-section-summary-in' type='checkbox'  checked><label for='section-adb3d6fa-4d1f-48ea-a3b5-1581710a4129' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>nuts2</span></div><div class='xr-var-dims'>(nuts2)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AL01&#x27; &#x27;AL02&#x27; ... &#x27;UKM9&#x27; &#x27;UKN0&#x27;</div><input id='attrs-180be837-9549-419e-8e8f-609f3eced8b2' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-180be837-9549-419e-8e8f-609f3eced8b2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a5a13eb2-349b-4c98-8115-0e5601faa603' class='xr-var-data-in' type='checkbox'><label for='data-a5a13eb2-349b-4c98-8115-0e5601faa603' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, ..., &#x27;UKM8&#x27;, &#x27;UKM9&#x27;, &#x27;UKN0&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>year</span></div><div class='xr-var-dims'>(year)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;2009&#x27; &#x27;2010&#x27; ... &#x27;2020&#x27; &#x27;2021&#x27;</div><input id='attrs-ae952bf9-760e-4aaf-bf9f-36cc6317af23' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ae952bf9-760e-4aaf-bf9f-36cc6317af23' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7739d984-f194-4956-86a9-35244acba8a8' class='xr-var-data-in' type='checkbox'><label for='data-7739d984-f194-4956-86a9-35244acba8a8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;, &#x27;2017&#x27;,
       &#x27;2018&#x27;, &#x27;2019&#x27;, &#x27;2020&#x27;, &#x27;2021&#x27;], dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-af99f62a-4a36-4ce2-8a43-ef8f401055e8' class='xr-section-summary-in' type='checkbox'  checked><label for='section-af99f62a-4a36-4ce2-8a43-ef8f401055e8' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>infant mortality</span></div><div class='xr-var-dims'>(nuts2, year)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... 4.2 nan nan nan</div><input id='attrs-52cba761-e9f9-4b10-b17b-f545b405a50c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-52cba761-e9f9-4b10-b17b-f545b405a50c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-892e6391-d5f6-492f-a2ed-b09074765806' class='xr-var-data-in' type='checkbox'><label for='data-892e6391-d5f6-492f-a2ed-b09074765806' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ nan,  nan,  nan, ..., 11.1,  9. ,  nan],
       [ nan,  nan,  nan, ..., 10.6, 11.3,  nan],
       [ nan,  nan,  nan, ...,  8.2,  9.2,  nan],
       ...,
       [ nan,  nan,  nan, ...,  nan,  nan,  nan],
       [ nan,  nan,  nan, ...,  nan,  nan,  nan],
       [ 4.8,  5.4,  3.9, ...,  nan,  nan,  nan]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-21c4f209-c066-45aa-8ec9-47913da7eaa5' class='xr-section-summary-in' type='checkbox'  ><label for='section-21c4f209-c066-45aa-8ec9-47913da7eaa5' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>nuts2</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-4675db27-bc59-478a-90bc-454cf1f718ba' class='xr-index-data-in' type='checkbox'/><label for='index-4675db27-bc59-478a-90bc-454cf1f718ba' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, &#x27;AT21&#x27;, &#x27;AT22&#x27;, &#x27;AT31&#x27;,
       &#x27;AT32&#x27;,
       ...
       &#x27;UKK3&#x27;, &#x27;UKK4&#x27;, &#x27;UKL1&#x27;, &#x27;UKL2&#x27;, &#x27;UKM5&#x27;, &#x27;UKM6&#x27;, &#x27;UKM7&#x27;, &#x27;UKM8&#x27;, &#x27;UKM9&#x27;,
       &#x27;UKN0&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;nuts2&#x27;, length=340))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>year</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-a18672da-e48e-462f-93f3-ddfad946a003' class='xr-index-data-in' type='checkbox'/><label for='index-a18672da-e48e-462f-93f3-ddfad946a003' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;, &#x27;2017&#x27;,
       &#x27;2018&#x27;, &#x27;2019&#x27;, &#x27;2020&#x27;, &#x27;2021&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;year&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-12cb3249-e8be-411a-8206-447a5aea7eea' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-12cb3249-e8be-411a-8206-447a5aea7eea' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
#+end_export


* Merging the data

#+begin_src jupyter-python :display plain

ds_P = xr.open_dataset('./data/population_nuts_2.nc')
ds_P['year'] = (ds_P['year'].values).astype('int')
ds_M = xr.open_dataset('./data/deaths_nuts_2.nc')
ds_M['year'] = (ds_M['year'].values).astype('int')

ds_infant = xr.open_dataset("./data/infant_mortality_nuts_2.nc")
ds_infant['year'] = (ds_infant['year'].values).astype('int')
ds_deprivation = xr.open_dataset("./data/material_deprivation_nuts_2.nc")
ds_deprivation['year'] = (ds_deprivation['year'].values).astype('int')
ds_unmet = xr.open_dataset("./data/unmet_needs_nuts_2.nc")
ds_unmet['year'] = (ds_unmet['year'].values).astype('int')
ds = xr.merge([ds_P.drop_vars(["HF2_PC_CHE","HF2_PPS_HAB","HF3_PPS_HAB"]),ds_M,ds_deprivation,ds_unmet,ds_infant],join='left')
# ds['year'] = (ds['year'].values).astype('int')
ds
#+end_src

#+RESULTS:
#+begin_example
<xarray.Dataset> Size: 215MB
Dimensions:                          (nuts2: 313, year: 31, sex: 2, age: 99)
Coordinates:
  ,* nuts2                            (nuts2) <U4 5kB 'AT11' 'AT12' ... 'UKN0'
  ,* year                             (year) int64 248B 1990 1991 ... 2019 2020
  ,* sex                              (sex) <U1 8B 'F' 'M'
  ,* age                              (age) float64 792B 1.0 2.0 ... 98.0 99.0
Data variables:
    country                          (nuts2, year, sex, age) <U14 108MB ...
    population                       (nuts2, year, sex, age) float64 15MB ...
    age_category                     (nuts2, year, sex, age) <U6 46MB ...
    country_code                     (nuts2, year, sex, age) <U2 15MB ...
    HF3_PC_CHE                       (nuts2, year, sex, age) float64 15MB ...
    deaths                           (nuts2, year, sex, age) float64 15MB 0.0...
    percentage_material_deprivation  (nuts2, year) float64 78kB nan nan ... nan
    TOOEXP                           (nuts2, year) float64 78kB nan nan ... nan
    UNMET                            (nuts2, year) float64 78kB nan nan ... nan
    infant mortality                 (nuts2, year) float64 78kB nan nan ... nan
#+end_example

#+begin_src jupyter-python :display plain

ds["country"] = ds["country"].isel(year=0,sex=0,age=0)
ds = ds.assign_coords(country=("nuts2", ds.country.values))
ds["age_category"] = ds["age_category"].isel(year=0,sex=0,nuts2=0)
ds = ds.assign_coords(age_category=("age", ds.age_category.values))
ds = ds.transpose("age","sex","year","nuts2")
ds
#+end_src

#+RESULTS:
#+begin_example
<xarray.Dataset> Size: 62MB
Dimensions:                          (nuts2: 313, year: 31, sex: 2, age: 99)
Coordinates:
  ,* nuts2                            (nuts2) <U4 5kB 'AT11' 'AT12' ... 'UKN0'
  ,* year                             (year) int64 248B 1990 1991 ... 2019 2020
  ,* sex                              (sex) <U1 8B 'F' 'M'
  ,* age                              (age) float64 792B 1.0 2.0 ... 98.0 99.0
    country                          (nuts2) <U14 18kB 'Austria' ... 'United ...
    age_category                     (age) <U6 2kB 'Y0-15' 'Y0-15' ... 'Y_GE85'
Data variables:
    population                       (age, sex, year, nuts2) float64 15MB ...
    country_code                     (age, sex, year, nuts2) <U2 15MB ...
    HF3_PC_CHE                       (age, sex, year, nuts2) float64 15MB ...
    deaths                           (age, sex, year, nuts2) float64 15MB 0.0...
    percentage_material_deprivation  (year, nuts2) float64 78kB nan nan ... nan
    TOOEXP                           (year, nuts2) float64 78kB nan nan ... nan
    UNMET                            (year, nuts2) float64 78kB nan nan ... nan
    infant mortality                 (year, nuts2) float64 78kB nan nan ... nan
#+end_example


#+begin_src jupyter-python :display plain
ds.to_netcdf("./data/oop_health_data.nc")
#+end_src

#+RESULTS:
