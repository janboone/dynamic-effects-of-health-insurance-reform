# -**- eval: org-toggle-inline-images: 1 -**-
#+Title: Getting Eurostat data 
#+Author: Jan Boone@@latex:\thanks{Tilburg University, Department of Economics, Tilec and CEPR, E-mail: \textit{j.boone@uvt.nl}.}@@
#+PROPERTY: header-args  :session geopandas :kernel python3 :async yes
# kernel can be geo_env or python3

#+LANGUAGE: en
#+INFOJS_OPT: toc:1 ltoc:1 mouse:underline path:http://orgmode.org/org-info.js
#+LaTeX_CLASS: article-12
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+OPTIONS: toc:nil timestamp:nil \n:nil @:t ::t |:t ^:{} _:{} *:t TeX:t LaTeX:t
#+HTML_HEAD: <link rel="stylesheet" href="./latex-css/style.css">
#+HTML_HEAD: <link rel="stylesheet" href="https://latex.now.sh/prism/prism.css">
#+HTML_HEAD: <script src="https://cdn.jsdelivr.net/npm/prismjs/prism.min.js"></script>


# this file must exist be a path or exist in `org-cite-csl-styles-dir': # apa-5th-edition.csl
#+csl-style: chicago-author-date-16th-edition.csl

# this must be a locales file in `org-cite-csl-locales-dir'. Defaults to en-US
#+csl-locale: en-US

* code to export to html :noexport:

#+BEGIN_SRC emacs-lisp :results silent
(setq org-export-with-broken-links t)

(require 'org-ref-refproc)
(let ((org-export-before-parsing-hook '(;;org-ref-cite-natmove ;; do this first
                    org-ref-csl-preprocess-buffer
                    org-ref-refproc)))
  (org-open-file (org-html-export-to-html)))
#+END_SRC

* Introduction

This file describes how we get the data for our project on [[./index.org][the health effects of demand side cost sharing]].

In this file we explain how we get the data and from where and at the same time we generate the data. By generating the data in this way, a change in the data by Eurostat will lead to (slightly) different results.

- Link to excel file with overview: http://ec.europa.eu/eurostat/documents/140934/4381644/Regional-statistics-overview.xlsx


The dataset itself is too big for github and can be found on [[https://dataverse.nl/dataset.xhtml?persistentId=doi:10.34894/AABEBD][DataverseNL]].


* Preamble code

Run this code first before running the code of particular data sets. It imports the relevant libraries.

#+begin_src jupyter-python
import numpy as np
import pandas as pd
from country_codes import oecd_dictionary, eurostat_dictionary
import eurostat
import xarray as xr
import matplotlib.pyplot as plt
start_year = 2008
end_year = 2018
year_range = np.arange(start_year,end_year+1)

EU_countries = ['Belgium', 'Bulgaria', 'Czechia', 'Denmark',
'Germany (until 1990 former territory of the FRG)', 'Germany','Estonia',
'Ireland', 'Greece', 'Spain', 'France', 'Croatia', 'Italy',
'Cyprus', 'Latvia', 'Lithuania', 'Luxembourg', 'Hungary', 'Malta',
'Netherlands', 'Austria', 'Poland', 'Portugal', 'Romania',
'Slovenia', 'Slovakia', 'Finland', 'Sweden', 'United Kingdom',
'Iceland', 'Liechtenstein', 'Norway', 'Switzerland',
'Bosnia and Herzegovina']

#+end_src

#+RESULTS:


We first describe how we get the data for each variable. Each of these variables is saved in a separate dataset. The final section contains the code that merges the data for these variables into one (big) dataset.

* Data

- overview of regional data: https://ec.europa.eu/eurostat/web/regions/data/database


** population

- population: https://ec.europa.eu/eurostat/databrowser/view/demo_r_d2jan/default/table?lang=en


#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('demo_r_d2jan')
df.rename({'geo\\TIME_PERIOD':'geo'},inplace=True,axis=1)
age_range = ['Y1', 'Y10', 'Y11', 'Y12', 'Y13', 'Y14', 'Y15',
       'Y16', 'Y17', 'Y18', 'Y19', 'Y2', 'Y20', 'Y21', 'Y22', 'Y23',
       'Y24', 'Y25', 'Y26', 'Y27', 'Y28', 'Y29', 'Y3', 'Y30', 'Y31',
       'Y32', 'Y33', 'Y34', 'Y35', 'Y36', 'Y37', 'Y38', 'Y39', 'Y4',
       'Y40', 'Y41', 'Y42', 'Y43', 'Y44', 'Y45', 'Y46', 'Y47', 'Y48',
       'Y49', 'Y5', 'Y50', 'Y51', 'Y52', 'Y53', 'Y54', 'Y55', 'Y56',
       'Y57', 'Y58', 'Y59', 'Y6', 'Y60', 'Y61', 'Y62', 'Y63', 'Y64',
       'Y65', 'Y66', 'Y67', 'Y68', 'Y69', 'Y7', 'Y70', 'Y71', 'Y72',
       'Y73', 'Y74', 'Y75', 'Y76', 'Y77', 'Y78', 'Y79', 'Y8', 'Y80',
       'Y81', 'Y82', 'Y83', 'Y84', 'Y85', 'Y86', 'Y87', 'Y88', 'Y89',
       'Y9', 'Y90', 'Y91', 'Y92', 'Y93', 'Y94', 'Y95', 'Y96', 'Y97',
       'Y98', 'Y99']
df['country_code'] = [x[:2] for x in df['geo']]
df['country'] = df['country_code'].replace(eurostat_dictionary)
df = df[df.country.isin(EU_countries) & \
        (df.sex.isin(["M","F"])) & (df.age.isin(age_range))]
df.drop(['country_code'],axis=1,inplace=True)
df = pd.melt(df,id_vars=['geo','country','sex','age'],
                        value_vars=[str(y) for y in year_range],
                        var_name='year',value_name='population')
df['nuts'] = [len(x)-2 for x in df.geo]
df = df.query('nuts == 2')
df.drop('nuts',inplace=True, axis=1)
df.rename({'geo':'nuts2', 'age':'age string'},\
          axis=1,inplace=True)
df['age'] = [float(x.replace('Y','')) for x in df['age string']]
df.drop('age string',inplace=True, axis=1)

#df.set_index(['nuts2','year','sex','age'],inplace=True)

df.head()
#+end_src

#+RESULTS:
:   nuts2  country sex  year  population  age
: 2  AT11  Austria   F  2008      1127.0  1.0
: 3  AT12  Austria   F  2008      7280.0  1.0
: 4  AT13  Austria   F  2008      8398.0  1.0
: 6  AT21  Austria   F  2008      2397.0  1.0
: 7  AT22  Austria   F  2008      5167.0  1.0





** OOP per country

We want a measure of "how generous" a healthcare system is in terms of oop-payments. This feature of the healthcare system tends to be defined at the country level. We use household oop payment and expenditure on voluntary payment schemes (for things that are not covered by basic or mandatory insurance). The paper uses mainly =PC_CHE= as unit of measurement.

- link to data: https://ec.europa.eu/eurostat/databrowser/view/hlth_sha11_hf/default/table?lang=en

| abbreviation | name                                                       |
|--------------+------------------------------------------------------------|
| HF2          | Voluntary health care payment schemes                      |
| HF3          | Household out-of-pocket payment                            |
| PC_CHE       | Percentual share of total current health expenditure (CHE) |
| PPS_HAB      | Purchasing power standard (PPS) per inhabitant             |


#+begin_src jupyter-python :display plain
df_o = eurostat.get_data_df('hlth_sha11_hf')
df_o.rename({'geo\\TIME_PERIOD':'geo'},inplace=True,axis=1)
df_o['country_code'] = [x[:2] for x in df_o['geo']]
df_o['country'] = df_o['country_code'].replace(eurostat_dictionary)
df_o = df_o[df_o.country.isin(EU_countries)  & \
        (df_o.icha11_hf.isin(["HF2", "HF3"])) &\
        (df_o.unit.isin([ 'PC_CHE','PPS_HAB']))]
df_o.drop(["geo"],axis=1,inplace=True)

df_o = pd.melt(df_o,id_vars=['country','country_code',\
                         'unit','icha11_hf'],
                        value_vars=[str(y) for y in year_range],
                        var_name='year',\
             value_name='health_expenditure')
df_o.set_index(['country','country_code',\
              'year','unit','icha11_hf'],inplace=True)
df_o = df_o.unstack()
df_o.columns = df_o.columns.droplevel()
df_o = df_o.unstack()
df_o.columns = df_o.columns.droplevel()
df_o.columns = ['HF2_PC_CHE','HF2_PPS_HAB',\
              'HF3_PC_CHE','HF3_PPS_HAB']
df_o.reset_index(inplace=True)
df_o.set_index(['country','year'],inplace=True)
df_o.tail()
#+end_src

#+RESULTS:
#+begin_example
                    country_code  HF2_PC_CHE  HF2_PPS_HAB  HF3_PC_CHE  \
country        year                                                     
United Kingdom 2014           UK        5.40       149.18       15.16   
               2015           UK        5.40       151.39       15.23   
               2016           UK        5.04       142.30       15.37   
               2017           UK        5.41       155.88       15.72   
               2018           UK        5.62       165.77       15.88   

                     HF3_PPS_HAB  
country        year               
United Kingdom 2014       419.03  
               2015       427.46  
               2016       434.36  
               2017       453.26  
               2018       468.46  
#+end_example






#+begin_src jupyter-python :display plain
# df = df.merge(df_c, how = 'left',\
#               on = ['country','year','sex','age_category'])
df = df.merge(df_o, how = 'left',\
              on = ['country','year'])
df.set_index(['nuts2','year','sex','age'],inplace=True)
df.tail()
#+end_src

#+RESULTS:
#+begin_example
                            country  population country_code  HF2_PC_CHE  \
nuts2 year sex age                                                         
UKM6  2018 M   99.0  United Kingdom        11.0           UK        5.62   
UKM7  2018 M   99.0  United Kingdom        40.0           UK        5.62   
UKM8  2018 M   99.0  United Kingdom        21.0           UK        5.62   
UKM9  2018 M   99.0  United Kingdom        17.0           UK        5.62   
UKN0  2018 M   99.0  United Kingdom        33.0           UK        5.62   

                     HF2_PPS_HAB  HF3_PC_CHE  HF3_PPS_HAB  
nuts2 year sex age                                         
UKM6  2018 M   99.0       165.77       15.88       468.46  
UKM7  2018 M   99.0       165.77       15.88       468.46  
UKM8  2018 M   99.0       165.77       15.88       468.46  
UKM9  2018 M   99.0       165.77       15.88       468.46  
UKN0  2018 M   99.0       165.77       15.88       468.46  
#+end_example






#+begin_src jupyter-python 
ds = df.to_xarray()
ds.to_netcdf("./data/population_nuts_2.nc")
ds
#+end_src

#+RESULTS:
#+begin_export html
<div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewBox="0 0 32 32">
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewBox="0 0 32 32">
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

html[theme="dark"],
html[data-theme="dark"],
body[data-theme="dark"],
body.vscode-dark {
  --xr-font-color0: rgba(255, 255, 255, 1);
  --xr-font-color2: rgba(255, 255, 255, 0.54);
  --xr-font-color3: rgba(255, 255, 255, 0.38);
  --xr-border-color: #1f1f1f;
  --xr-disabled-color: #515151;
  --xr-background-color: #111111;
  --xr-background-color-row-even: #111111;
  --xr-background-color-row-odd: #313131;
}

.xr-wrap {
  display: block !important;
  min-width: 300px;
  max-width: 700px;
}

.xr-text-repr-fallback {
  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
  display: none;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: inline-block;
  opacity: 0;
  height: 0;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:focus + label {
  border: 2px solid var(--xr-font-color0);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: "►";
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: "▼";
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: "(";
}

.xr-dim-list:after {
  content: ")";
}

.xr-dim-list li:not(:last-child):after {
  content: ",";
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-index-preview {
  grid-column: 2 / 5;
  color: var(--xr-font-color2);
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt,
.xr-attrs dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 38MB
Dimensions:       (nuts2: 313, year: 11, sex: 2, age: 99)
Coordinates:
  * nuts2         (nuts2) object 3kB &#x27;AT11&#x27; &#x27;AT12&#x27; &#x27;AT13&#x27; ... &#x27;UKM9&#x27; &#x27;UKN0&#x27;
  * year          (year) object 88B &#x27;2008&#x27; &#x27;2009&#x27; &#x27;2010&#x27; ... &#x27;2017&#x27; &#x27;2018&#x27;
  * sex           (sex) object 16B &#x27;F&#x27; &#x27;M&#x27;
  * age           (age) float64 792B 1.0 2.0 3.0 4.0 5.0 ... 96.0 97.0 98.0 99.0
Data variables:
    country       (nuts2, year, sex, age) object 5MB &#x27;Austria&#x27; ... &#x27;United Ki...
    population    (nuts2, year, sex, age) float64 5MB 1.127e+03 ... 33.0
    country_code  (nuts2, year, sex, age) object 5MB &#x27;AT&#x27; &#x27;AT&#x27; ... &#x27;UK&#x27; &#x27;UK&#x27;
    HF2_PC_CHE    (nuts2, year, sex, age) float64 5MB 6.8 6.8 6.8 ... 5.62 5.62
    HF2_PPS_HAB   (nuts2, year, sex, age) float64 5MB 212.5 212.5 ... 165.8
    HF3_PC_CHE    (nuts2, year, sex, age) float64 5MB 18.24 18.24 ... 15.88
    HF3_PPS_HAB   (nuts2, year, sex, age) float64 5MB 570.5 570.5 ... 468.5</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-96160ccd-3b02-4def-ae1c-fd2582d55061' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-96160ccd-3b02-4def-ae1c-fd2582d55061' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>nuts2</span>: 313</li><li><span class='xr-has-index'>year</span>: 11</li><li><span class='xr-has-index'>sex</span>: 2</li><li><span class='xr-has-index'>age</span>: 99</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-b0848022-e39f-4b2b-aebd-a8d5a1703b7a' class='xr-section-summary-in' type='checkbox'  checked><label for='section-b0848022-e39f-4b2b-aebd-a8d5a1703b7a' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>nuts2</span></div><div class='xr-var-dims'>(nuts2)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AT11&#x27; &#x27;AT12&#x27; ... &#x27;UKM9&#x27; &#x27;UKN0&#x27;</div><input id='attrs-8f50b855-acc2-4997-a8f2-e762ae4367e4' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8f50b855-acc2-4997-a8f2-e762ae4367e4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7081d5cb-6193-4243-b9e8-3ae35594e4c7' class='xr-var-data-in' type='checkbox'><label for='data-7081d5cb-6193-4243-b9e8-3ae35594e4c7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, ..., &#x27;UKM8&#x27;, &#x27;UKM9&#x27;, &#x27;UKN0&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>year</span></div><div class='xr-var-dims'>(year)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;2008&#x27; &#x27;2009&#x27; ... &#x27;2017&#x27; &#x27;2018&#x27;</div><input id='attrs-b1651487-7667-4ce7-b36d-ba7ede10d044' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b1651487-7667-4ce7-b36d-ba7ede10d044' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-00aec627-ad44-459b-b316-10262960ec43' class='xr-var-data-in' type='checkbox'><label for='data-00aec627-ad44-459b-b316-10262960ec43' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2008&#x27;, &#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;,
       &#x27;2017&#x27;, &#x27;2018&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>sex</span></div><div class='xr-var-dims'>(sex)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;F&#x27; &#x27;M&#x27;</div><input id='attrs-4fa52da7-b494-41a1-b89a-b3281ec4012d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-4fa52da7-b494-41a1-b89a-b3281ec4012d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4d12ce81-67d2-4433-ae39-4d8d92725143' class='xr-var-data-in' type='checkbox'><label for='data-4d12ce81-67d2-4433-ae39-4d8d92725143' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;F&#x27;, &#x27;M&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>age</span></div><div class='xr-var-dims'>(age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.0 2.0 3.0 4.0 ... 97.0 98.0 99.0</div><input id='attrs-89641bee-ec1b-4b83-bb08-4259c4edd628' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-89641bee-ec1b-4b83-bb08-4259c4edd628' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f68b7708-033b-4d70-ad76-246e9e261d00' class='xr-var-data-in' type='checkbox'><label for='data-f68b7708-033b-4d70-ad76-246e9e261d00' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,
       15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
       29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
       43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
       57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
       71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
       85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96., 97., 98.,
       99.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-f9f998ee-bf97-40e1-acd7-cb0325687f9d' class='xr-section-summary-in' type='checkbox'  checked><label for='section-f9f998ee-bf97-40e1-acd7-cb0325687f9d' class='xr-section-summary' >Data variables: <span>(7)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>country</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;Austria&#x27; ... &#x27;United Kingdom&#x27;</div><input id='attrs-171800d5-a721-4d0b-b06e-3781282b9ca3' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-171800d5-a721-4d0b-b06e-3781282b9ca3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c183e919-bd39-4905-ba63-2bea42691d30' class='xr-var-data-in' type='checkbox'><label for='data-c183e919-bd39-4905-ba63-2bea42691d30' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;],
         [&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;]],

        [[&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;],
         [&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;]],

        [[&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;],
         [&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;]],

        ...,

        [[&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
          &#x27;Austria&#x27;],
         [&#x27;Austria&#x27;, &#x27;Austria&#x27;, &#x27;Austria&#x27;, ..., &#x27;Austria&#x27;, &#x27;Austria&#x27;,
...
         [&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;]],

        ...,

        [[&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;],
         [&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;]],

        [[&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;],
         [&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;]],

        [[&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;],
         [&#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, ...,
          &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;, &#x27;United Kingdom&#x27;]]]],
      dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>population</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.127e+03 1.119e+03 ... 42.0 33.0</div><input id='attrs-067257db-9195-4010-afc2-1f548a91f837' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-067257db-9195-4010-afc2-1f548a91f837' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0843d73e-67c3-4e04-a2ff-230db2dd6260' class='xr-var-data-in' type='checkbox'><label for='data-0843d73e-67c3-4e04-a2ff-230db2dd6260' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[1.1270e+03, 1.1190e+03, 1.2260e+03, ..., 3.8000e+01,
          1.7000e+01, 1.2000e+01],
         [1.0970e+03, 1.1820e+03, 1.2420e+03, ..., 1.3000e+01,
          5.0000e+00, 5.0000e+00]],

        [[1.0990e+03, 1.1610e+03, 1.1630e+03, ..., 4.0000e+01,
          2.2000e+01, 1.4000e+01],
         [1.1930e+03, 1.1320e+03, 1.2100e+03, ..., 7.0000e+00,
          7.0000e+00, 2.0000e+00]],

        [[1.1790e+03, 1.1180e+03, 1.1710e+03, ..., 4.1000e+01,
          2.5000e+01, 1.8000e+01],
         [1.1470e+03, 1.2120e+03, 1.1640e+03, ..., 1.0000e+01,
          4.0000e+00, 3.0000e+00]],

        ...,

        [[1.1060e+03, 1.1460e+03, 1.2320e+03, ..., 3.2000e+01,
          1.7000e+01, 1.3000e+01],
         [1.2380e+03, 1.1980e+03, 1.2480e+03, ..., 8.0000e+00,
...
                 nan,        nan],
         [1.3064e+04, 1.2776e+04, 1.2181e+04, ...,        nan,
                 nan,        nan]],

        ...,

        [[1.1942e+04, 1.2155e+04, 1.2488e+04, ..., 2.6200e+02,
          2.1100e+02, 1.4400e+02],
         [1.2550e+04, 1.2679e+04, 1.3016e+04, ..., 7.2000e+01,
          3.6000e+01, 3.2000e+01]],

        [[1.1925e+04, 1.2019e+04, 1.2199e+04, ..., 2.9500e+02,
          2.0400e+02, 1.3800e+02],
         [1.2691e+04, 1.2632e+04, 1.2735e+04, ..., 8.4000e+01,
          3.7000e+01, 3.0000e+01]],

        [[1.1730e+04, 1.1970e+04, 1.2065e+04, ..., 3.6600e+02,
          2.2800e+02, 1.3400e+02],
         [1.2481e+04, 1.2764e+04, 1.2681e+04, ..., 1.1300e+02,
          4.2000e+01, 3.3000e+01]]]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>country_code</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AT&#x27; &#x27;AT&#x27; &#x27;AT&#x27; ... &#x27;UK&#x27; &#x27;UK&#x27; &#x27;UK&#x27;</div><input id='attrs-7a334f12-a190-4b1d-bdc0-0a25a40a004d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-7a334f12-a190-4b1d-bdc0-0a25a40a004d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3c029f72-8e62-4d82-a877-b35022ccd917' class='xr-var-data-in' type='checkbox'><label for='data-3c029f72-8e62-4d82-a877-b35022ccd917' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;],
         [&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;]],

        [[&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;],
         [&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;]],

        [[&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;],
         [&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;]],

        ...,

        [[&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;],
         [&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;]],

        [[&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;],
         [&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;]],

        [[&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;],
         [&#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;, ..., &#x27;AT&#x27;, &#x27;AT&#x27;, &#x27;AT&#x27;]]],

...

       [[[&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;],
         [&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;]],

        [[&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;],
         [&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;]],

        [[&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;],
         [&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;]],

        ...,

        [[&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;],
         [&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;]],

        [[&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;],
         [&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;]],

        [[&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;],
         [&#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;, ..., &#x27;UK&#x27;, &#x27;UK&#x27;, &#x27;UK&#x27;]]]], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>HF2_PC_CHE</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>6.8 6.8 6.8 6.8 ... 5.62 5.62 5.62</div><input id='attrs-64b3c323-dddd-48cc-a93c-b9b359356a20' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-64b3c323-dddd-48cc-a93c-b9b359356a20' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-80d1752e-72a4-419f-95e1-e4e40c6afea1' class='xr-var-data-in' type='checkbox'><label for='data-80d1752e-72a4-419f-95e1-e4e40c6afea1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[6.8 , 6.8 , 6.8 , ..., 6.8 , 6.8 , 6.8 ],
         [6.8 , 6.8 , 6.8 , ..., 6.8 , 6.8 , 6.8 ]],

        [[6.85, 6.85, 6.85, ..., 6.85, 6.85, 6.85],
         [6.85, 6.85, 6.85, ..., 6.85, 6.85, 6.85]],

        [[6.75, 6.75, 6.75, ..., 6.75, 6.75, 6.75],
         [6.75, 6.75, 6.75, ..., 6.75, 6.75, 6.75]],

        ...,

        [[6.8 , 6.8 , 6.8 , ..., 6.8 , 6.8 , 6.8 ],
         [6.8 , 6.8 , 6.8 , ..., 6.8 , 6.8 , 6.8 ]],

        [[6.83, 6.83, 6.83, ..., 6.83, 6.83, 6.83],
         [6.83, 6.83, 6.83, ..., 6.83, 6.83, 6.83]],

        [[6.91, 6.91, 6.91, ..., 6.91, 6.91, 6.91],
         [6.91, 6.91, 6.91, ..., 6.91, 6.91, 6.91]]],

...

       [[[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

        ...,

        [[5.04, 5.04, 5.04, ..., 5.04, 5.04, 5.04],
         [5.04, 5.04, 5.04, ..., 5.04, 5.04, 5.04]],

        [[5.41, 5.41, 5.41, ..., 5.41, 5.41, 5.41],
         [5.41, 5.41, 5.41, ..., 5.41, 5.41, 5.41]],

        [[5.62, 5.62, 5.62, ..., 5.62, 5.62, 5.62],
         [5.62, 5.62, 5.62, ..., 5.62, 5.62, 5.62]]]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>HF2_PPS_HAB</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>212.5 212.5 212.5 ... 165.8 165.8</div><input id='attrs-bc6997ae-272b-4c52-a00e-689451d48024' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-bc6997ae-272b-4c52-a00e-689451d48024' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ea3a4733-4bf2-4798-83df-aea78030c37f' class='xr-var-data-in' type='checkbox'><label for='data-ea3a4733-4bf2-4798-83df-aea78030c37f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[212.54, 212.54, 212.54, ..., 212.54, 212.54, 212.54],
         [212.54, 212.54, 212.54, ..., 212.54, 212.54, 212.54]],

        [[217.12, 217.12, 217.12, ..., 217.12, 217.12, 217.12],
         [217.12, 217.12, 217.12, ..., 217.12, 217.12, 217.12]],

        [[219.15, 219.15, 219.15, ..., 219.15, 219.15, 219.15],
         [219.15, 219.15, 219.15, ..., 219.15, 219.15, 219.15]],

        ...,

        [[249.95, 249.95, 249.95, ..., 249.95, 249.95, 249.95],
         [249.95, 249.95, 249.95, ..., 249.95, 249.95, 249.95]],

        [[255.61, 255.61, 255.61, ..., 255.61, 255.61, 255.61],
         [255.61, 255.61, 255.61, ..., 255.61, 255.61, 255.61]],

        [[265.81, 265.81, 265.81, ..., 265.81, 265.81, 265.81],
         [265.81, 265.81, 265.81, ..., 265.81, 265.81, 265.81]]],

...

       [[[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        ...,

        [[142.3 , 142.3 , 142.3 , ..., 142.3 , 142.3 , 142.3 ],
         [142.3 , 142.3 , 142.3 , ..., 142.3 , 142.3 , 142.3 ]],

        [[155.88, 155.88, 155.88, ..., 155.88, 155.88, 155.88],
         [155.88, 155.88, 155.88, ..., 155.88, 155.88, 155.88]],

        [[165.77, 165.77, 165.77, ..., 165.77, 165.77, 165.77],
         [165.77, 165.77, 165.77, ..., 165.77, 165.77, 165.77]]]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>HF3_PC_CHE</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>18.24 18.24 18.24 ... 15.88 15.88</div><input id='attrs-ca0dec21-06e4-4a66-93b8-be57ec4153d5' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ca0dec21-06e4-4a66-93b8-be57ec4153d5' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ee1a0390-2cea-4456-9753-f47aa79b9b7e' class='xr-var-data-in' type='checkbox'><label for='data-ee1a0390-2cea-4456-9753-f47aa79b9b7e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[18.24, 18.24, 18.24, ..., 18.24, 18.24, 18.24],
         [18.24, 18.24, 18.24, ..., 18.24, 18.24, 18.24]],

        [[18.05, 18.05, 18.05, ..., 18.05, 18.05, 18.05],
         [18.05, 18.05, 18.05, ..., 18.05, 18.05, 18.05]],

        [[18.6 , 18.6 , 18.6 , ..., 18.6 , 18.6 , 18.6 ],
         [18.6 , 18.6 , 18.6 , ..., 18.6 , 18.6 , 18.6 ]],

        ...,

        [[19.24, 19.24, 19.24, ..., 19.24, 19.24, 19.24],
         [19.24, 19.24, 19.24, ..., 19.24, 19.24, 19.24]],

        [[19.15, 19.15, 19.15, ..., 19.15, 19.15, 19.15],
         [19.15, 19.15, 19.15, ..., 19.15, 19.15, 19.15]],

        [[18.43, 18.43, 18.43, ..., 18.43, 18.43, 18.43],
         [18.43, 18.43, 18.43, ..., 18.43, 18.43, 18.43]]],

...

       [[[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        [[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        [[  nan,   nan,   nan, ...,   nan,   nan,   nan],
         [  nan,   nan,   nan, ...,   nan,   nan,   nan]],

        ...,

        [[15.37, 15.37, 15.37, ..., 15.37, 15.37, 15.37],
         [15.37, 15.37, 15.37, ..., 15.37, 15.37, 15.37]],

        [[15.72, 15.72, 15.72, ..., 15.72, 15.72, 15.72],
         [15.72, 15.72, 15.72, ..., 15.72, 15.72, 15.72]],

        [[15.88, 15.88, 15.88, ..., 15.88, 15.88, 15.88],
         [15.88, 15.88, 15.88, ..., 15.88, 15.88, 15.88]]]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>HF3_PPS_HAB</span></div><div class='xr-var-dims'>(nuts2, year, sex, age)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>570.5 570.5 570.5 ... 468.5 468.5</div><input id='attrs-e99e7b32-a096-4989-862f-fd73bdd1704b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e99e7b32-a096-4989-862f-fd73bdd1704b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3d356acc-e625-467b-917e-d4f6915728b4' class='xr-var-data-in' type='checkbox'><label for='data-3d356acc-e625-467b-917e-d4f6915728b4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[[570.47, 570.47, 570.47, ..., 570.47, 570.47, 570.47],
         [570.47, 570.47, 570.47, ..., 570.47, 570.47, 570.47]],

        [[572.23, 572.23, 572.23, ..., 572.23, 572.23, 572.23],
         [572.23, 572.23, 572.23, ..., 572.23, 572.23, 572.23]],

        [[603.83, 603.83, 603.83, ..., 603.83, 603.83, 603.83],
         [603.83, 603.83, 603.83, ..., 603.83, 603.83, 603.83]],

        ...,

        [[707.8 , 707.8 , 707.8 , ..., 707.8 , 707.8 , 707.8 ],
         [707.8 , 707.8 , 707.8 , ..., 707.8 , 707.8 , 707.8 ]],

        [[716.91, 716.91, 716.91, ..., 716.91, 716.91, 716.91],
         [716.91, 716.91, 716.91, ..., 716.91, 716.91, 716.91]],

        [[709.19, 709.19, 709.19, ..., 709.19, 709.19, 709.19],
         [709.19, 709.19, 709.19, ..., 709.19, 709.19, 709.19]]],

...

       [[[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        ...,

        [[434.36, 434.36, 434.36, ..., 434.36, 434.36, 434.36],
         [434.36, 434.36, 434.36, ..., 434.36, 434.36, 434.36]],

        [[453.26, 453.26, 453.26, ..., 453.26, 453.26, 453.26],
         [453.26, 453.26, 453.26, ..., 453.26, 453.26, 453.26]],

        [[468.46, 468.46, 468.46, ..., 468.46, 468.46, 468.46],
         [468.46, 468.46, 468.46, ..., 468.46, 468.46, 468.46]]]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-b27300c0-6b59-4273-bc72-9f19ed4928d2' class='xr-section-summary-in' type='checkbox'  ><label for='section-b27300c0-6b59-4273-bc72-9f19ed4928d2' class='xr-section-summary' >Indexes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>nuts2</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-726c9130-bfef-468f-a58b-6b654dc250d4' class='xr-index-data-in' type='checkbox'/><label for='index-726c9130-bfef-468f-a58b-6b654dc250d4' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, &#x27;AT21&#x27;, &#x27;AT22&#x27;, &#x27;AT31&#x27;, &#x27;AT32&#x27;, &#x27;AT33&#x27;, &#x27;AT34&#x27;,
       &#x27;BE10&#x27;,
       ...
       &#x27;UKK3&#x27;, &#x27;UKK4&#x27;, &#x27;UKL1&#x27;, &#x27;UKL2&#x27;, &#x27;UKM5&#x27;, &#x27;UKM6&#x27;, &#x27;UKM7&#x27;, &#x27;UKM8&#x27;, &#x27;UKM9&#x27;,
       &#x27;UKN0&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;nuts2&#x27;, length=313))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>year</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-0cc9736f-f1d0-4369-ae68-a201432dc04d' class='xr-index-data-in' type='checkbox'/><label for='index-0cc9736f-f1d0-4369-ae68-a201432dc04d' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;2008&#x27;, &#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;,
       &#x27;2017&#x27;, &#x27;2018&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;year&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>sex</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-a35d152b-66af-413c-a046-a9fbb11627b1' class='xr-index-data-in' type='checkbox'/><label for='index-a35d152b-66af-413c-a046-a9fbb11627b1' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;F&#x27;, &#x27;M&#x27;], dtype=&#x27;object&#x27;, name=&#x27;sex&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>age</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-c81c3958-0c78-491a-8e7f-fc48fcf1d09e' class='xr-index-data-in' type='checkbox'/><label for='index-c81c3958-0c78-491a-8e7f-fc48fcf1d09e' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 1.0,  2.0,  3.0,  4.0,  5.0,  6.0,  7.0,  8.0,  9.0, 10.0, 11.0, 12.0,
       13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0,
       25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0,
       37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0,
       49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0,
       61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0,
       73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0,
       85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0,
       97.0, 98.0, 99.0],
      dtype=&#x27;float64&#x27;, name=&#x27;age&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-17945542-310e-4799-b198-1c6340c82290' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-17945542-310e-4799-b198-1c6340c82290' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
#+end_export


** deaths
- deaths: https://ec.europa.eu/eurostat/databrowser/view/demo_r_magec/default/table?lang=en


#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('demo_r_magec')
df.rename({'geo\\TIME_PERIOD':'geo'},inplace=True,axis=1)
age_range = ['Y1', 'Y10', 'Y11', 'Y12', 'Y13', 'Y14', 'Y15',
       'Y16', 'Y17', 'Y18', 'Y19', 'Y2', 'Y20', 'Y21', 'Y22', 'Y23',
       'Y24', 'Y25', 'Y26', 'Y27', 'Y28', 'Y29', 'Y3', 'Y30', 'Y31',
       'Y32', 'Y33', 'Y34', 'Y35', 'Y36', 'Y37', 'Y38', 'Y39', 'Y4',
       'Y40', 'Y41', 'Y42', 'Y43', 'Y44', 'Y45', 'Y46', 'Y47', 'Y48',
       'Y49', 'Y5', 'Y50', 'Y51', 'Y52', 'Y53', 'Y54', 'Y55', 'Y56',
       'Y57', 'Y58', 'Y59', 'Y6', 'Y60', 'Y61', 'Y62', 'Y63', 'Y64',
       'Y65', 'Y66', 'Y67', 'Y68', 'Y69', 'Y7', 'Y70', 'Y71', 'Y72',
       'Y73', 'Y74', 'Y75', 'Y76', 'Y77', 'Y78', 'Y79', 'Y8', 'Y80',
       'Y81', 'Y82', 'Y83', 'Y84', 'Y85', 'Y86', 'Y87', 'Y88', 'Y89',
       'Y9', 'Y90', 'Y91', 'Y92', 'Y93', 'Y94', 'Y95', 'Y96', 'Y97',
       'Y98', 'Y99']
df['country_code'] = [x[:2] for x in df['geo']]
df['country'] = df['country_code'].replace(eurostat_dictionary)
df = df[df.country.isin(EU_countries) & \
        (df.sex.isin(["M","F"])) & (df.age.isin(age_range))]
df.drop(['country','country_code'],axis=1,inplace=True)
df = pd.melt(df,id_vars=['geo','sex','age'],
                        value_vars=[str(y) for y in year_range],
                        var_name='year',value_name='deaths')
df['nuts'] = [len(x)-2 for x in df.geo]
df = df.query('nuts == 2')
df.drop('nuts',inplace=True, axis=1)
df.rename({'geo':'nuts2', 'age':'age string'},\
          axis=1,inplace=True)
df['age'] = [float(x.replace('Y','')) for x in df['age string']]
df.drop('age string',inplace=True, axis=1)

df.set_index(['nuts2','year','sex','age'],inplace=True)

df.head()
#+end_src

#+RESULTS:
:                     deaths
: nuts2 year sex age        
: AT11  2008 F   1.0     1.0
: AT12  2008 F   1.0     3.0
: AT13  2008 F   1.0     3.0
: AT21  2008 F   1.0     0.0
: AT22  2008 F   1.0     2.0



#+begin_src jupyter-python :display plain
ds = df.to_xarray()
ds.to_netcdf("./data/deaths_nuts_2.nc")
ds
#+end_src

#+RESULTS:
: <xarray.Dataset> Size: 5MB
: Dimensions:  (nuts2: 313, year: 11, sex: 2, age: 99)
: Coordinates:
:   * nuts2    (nuts2) object 3kB 'AT11' 'AT12' 'AT13' ... 'UKM8' 'UKM9' 'UKN0'
:   * year     (year) object 88B '2008' '2009' '2010' ... '2016' '2017' '2018'
:   * sex      (sex) object 16B 'F' 'M'
:   * age      (age) float64 792B 1.0 2.0 3.0 4.0 5.0 ... 95.0 96.0 97.0 98.0 99.0
: Data variables:
:     deaths   (nuts2, year, sex, age) float64 5MB 1.0 0.0 0.0 ... 48.0 26.0 18.0


** Poverty measures

Note that --when I accessed the data-- ~People at risk of poverty or social exclusion by NUTS 2 region (tgs00107)~ is only available from 2013 onwards:
- link to the data on at risk of poverty: https://ec.europa.eu/eurostat/databrowser/view/tgs00103/default/table?lang=en
- at risk of poverty or social exclusion: https://ec.europa.eu/eurostat/databrowser/view/tgs00107/default/table?lang=en&category=t_ilc.t_ilc_pe


Therefore we use the severe material deprivation measure.


*** Severe material deprivation rate by NUTS 2 regions [TGS00104]

- link to the data: https://ec.europa.eu/eurostat/databrowser/view/tgs00104/default/table?lang=en
- data only starts at 2009

#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('tgs00104')
df.rename({'geo\\TIME_PERIOD':'nuts2'},inplace=True,axis=1)
df = df[(df.unit == "PC")]
df.drop(["unit"],axis=1,inplace=True)
df['nuts'] = [len(x)-2 for x in df.nuts2]
df = df[df.nuts == 2]
df.drop('nuts',axis=1,inplace=True)

df = pd.melt(df,id_vars=['nuts2'],
                        value_vars=[str(y) for y in np.arange(start_year+1,end_year+1)],
                        var_name='year',\
             value_name='percentage_material_deprivation')
df.set_index(['nuts2','year'],inplace=True)
df.head()
#+end_src

#+RESULTS:
:             percentage_material_deprivation
: nuts2 year                                 
: AL01  2009                              NaN
: AL02  2009                              NaN
: AL03  2009                              NaN
: AT11  2009                              NaN
: AT12  2009                              NaN


#+begin_src jupyter-python 
ds_material_deprivation = df.to_xarray()
ds_material_deprivation.to_netcdf("./data/material_deprivation_nuts_2.nc")
ds_material_deprivation
#+end_src

#+RESULTS:
#+begin_export html
<div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewBox="0 0 32 32">
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewBox="0 0 32 32">
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

html[theme="dark"],
html[data-theme="dark"],
body[data-theme="dark"],
body.vscode-dark {
  --xr-font-color0: rgba(255, 255, 255, 1);
  --xr-font-color2: rgba(255, 255, 255, 0.54);
  --xr-font-color3: rgba(255, 255, 255, 0.38);
  --xr-border-color: #1f1f1f;
  --xr-disabled-color: #515151;
  --xr-background-color: #111111;
  --xr-background-color-row-even: #111111;
  --xr-background-color-row-odd: #313131;
}

.xr-wrap {
  display: block !important;
  min-width: 300px;
  max-width: 700px;
}

.xr-text-repr-fallback {
  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
  display: none;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: inline-block;
  opacity: 0;
  height: 0;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:focus + label {
  border: 2px solid var(--xr-font-color0);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: "►";
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: "▼";
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: "(";
}

.xr-dim-list:after {
  content: ")";
}

.xr-dim-list li:not(:last-child):after {
  content: ",";
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-index-preview {
  grid-column: 2 / 5;
  color: var(--xr-font-color2);
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt,
.xr-attrs dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 16kB
Dimensions:                          (nuts2: 179, year: 10)
Coordinates:
  * nuts2                            (nuts2) object 1kB &#x27;AL01&#x27; &#x27;AL02&#x27; ... &#x27;SK04&#x27;
  * year                             (year) object 80B &#x27;2009&#x27; &#x27;2010&#x27; ... &#x27;2018&#x27;
Data variables:
    percentage_material_deprivation  (nuts2, year) float64 14kB nan nan ... 10.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-a97da6ad-8268-49be-99d8-c54034e39f10' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-a97da6ad-8268-49be-99d8-c54034e39f10' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>nuts2</span>: 179</li><li><span class='xr-has-index'>year</span>: 10</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-e19ecd96-2c35-493d-be8c-ab2acaa4ffe5' class='xr-section-summary-in' type='checkbox'  checked><label for='section-e19ecd96-2c35-493d-be8c-ab2acaa4ffe5' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>nuts2</span></div><div class='xr-var-dims'>(nuts2)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AL01&#x27; &#x27;AL02&#x27; ... &#x27;SK03&#x27; &#x27;SK04&#x27;</div><input id='attrs-eaf61777-c6be-4829-ab07-98eff2d86118' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-eaf61777-c6be-4829-ab07-98eff2d86118' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b8cb5f7e-e11c-4bc3-9360-c26cfb811ae6' class='xr-var-data-in' type='checkbox'><label for='data-b8cb5f7e-e11c-4bc3-9360-c26cfb811ae6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, &#x27;AT21&#x27;, &#x27;AT22&#x27;, &#x27;AT31&#x27;,
       &#x27;AT32&#x27;, &#x27;AT33&#x27;, &#x27;AT34&#x27;, &#x27;BG31&#x27;, &#x27;BG32&#x27;, &#x27;BG33&#x27;, &#x27;BG34&#x27;, &#x27;BG41&#x27;, &#x27;BG42&#x27;,
       &#x27;CH01&#x27;, &#x27;CH02&#x27;, &#x27;CH03&#x27;, &#x27;CH04&#x27;, &#x27;CH05&#x27;, &#x27;CH06&#x27;, &#x27;CH07&#x27;, &#x27;CZ01&#x27;, &#x27;CZ02&#x27;,
       &#x27;CZ03&#x27;, &#x27;CZ04&#x27;, &#x27;CZ05&#x27;, &#x27;CZ06&#x27;, &#x27;CZ07&#x27;, &#x27;CZ08&#x27;, &#x27;DK01&#x27;, &#x27;DK02&#x27;, &#x27;DK03&#x27;,
       &#x27;DK04&#x27;, &#x27;DK05&#x27;, &#x27;EL30&#x27;, &#x27;EL41&#x27;, &#x27;EL42&#x27;, &#x27;EL43&#x27;, &#x27;EL51&#x27;, &#x27;EL52&#x27;, &#x27;EL53&#x27;,
       &#x27;EL54&#x27;, &#x27;EL61&#x27;, &#x27;EL62&#x27;, &#x27;EL63&#x27;, &#x27;EL64&#x27;, &#x27;EL65&#x27;, &#x27;ES11&#x27;, &#x27;ES12&#x27;, &#x27;ES13&#x27;,
       &#x27;ES21&#x27;, &#x27;ES22&#x27;, &#x27;ES23&#x27;, &#x27;ES24&#x27;, &#x27;ES30&#x27;, &#x27;ES41&#x27;, &#x27;ES42&#x27;, &#x27;ES43&#x27;, &#x27;ES51&#x27;,
       &#x27;ES52&#x27;, &#x27;ES53&#x27;, &#x27;ES61&#x27;, &#x27;ES62&#x27;, &#x27;ES63&#x27;, &#x27;ES64&#x27;, &#x27;ES70&#x27;, &#x27;FI1B&#x27;, &#x27;FI1C&#x27;,
       &#x27;FI1D&#x27;, &#x27;HR03&#x27;, &#x27;HR04&#x27;, &#x27;HU10&#x27;, &#x27;HU11&#x27;, &#x27;HU12&#x27;, &#x27;HU21&#x27;, &#x27;HU22&#x27;, &#x27;HU23&#x27;,
       &#x27;HU31&#x27;, &#x27;HU32&#x27;, &#x27;HU33&#x27;, &#x27;IE01&#x27;, &#x27;IE02&#x27;, &#x27;IE04&#x27;, &#x27;IE05&#x27;, &#x27;IE06&#x27;, &#x27;ITC1&#x27;,
       &#x27;ITC2&#x27;, &#x27;ITC3&#x27;, &#x27;ITC4&#x27;, &#x27;ITF1&#x27;, &#x27;ITF2&#x27;, &#x27;ITF3&#x27;, &#x27;ITF4&#x27;, &#x27;ITF5&#x27;, &#x27;ITF6&#x27;,
       &#x27;ITG1&#x27;, &#x27;ITG2&#x27;, &#x27;ITH1&#x27;, &#x27;ITH2&#x27;, &#x27;ITH3&#x27;, &#x27;ITH4&#x27;, &#x27;ITH5&#x27;, &#x27;ITI1&#x27;, &#x27;ITI2&#x27;,
       &#x27;ITI3&#x27;, &#x27;ITI4&#x27;, &#x27;LT01&#x27;, &#x27;LT02&#x27;, &#x27;NL11&#x27;, &#x27;NL12&#x27;, &#x27;NL13&#x27;, &#x27;NL21&#x27;, &#x27;NL22&#x27;,
       &#x27;NL23&#x27;, &#x27;NL31&#x27;, &#x27;NL32&#x27;, &#x27;NL33&#x27;, &#x27;NL34&#x27;, &#x27;NL41&#x27;, &#x27;NL42&#x27;, &#x27;NO01&#x27;, &#x27;NO02&#x27;,
       &#x27;NO03&#x27;, &#x27;NO04&#x27;, &#x27;NO05&#x27;, &#x27;NO06&#x27;, &#x27;NO07&#x27;, &#x27;PL21&#x27;, &#x27;PL22&#x27;, &#x27;PL41&#x27;, &#x27;PL42&#x27;,
       &#x27;PL43&#x27;, &#x27;PL51&#x27;, &#x27;PL52&#x27;, &#x27;PL61&#x27;, &#x27;PL62&#x27;, &#x27;PL63&#x27;, &#x27;PL71&#x27;, &#x27;PL72&#x27;, &#x27;PL81&#x27;,
       &#x27;PL82&#x27;, &#x27;PL84&#x27;, &#x27;PL91&#x27;, &#x27;PL92&#x27;, &#x27;PT11&#x27;, &#x27;PT15&#x27;, &#x27;PT16&#x27;, &#x27;PT17&#x27;, &#x27;PT18&#x27;,
       &#x27;PT20&#x27;, &#x27;PT30&#x27;, &#x27;RO11&#x27;, &#x27;RO12&#x27;, &#x27;RO21&#x27;, &#x27;RO22&#x27;, &#x27;RO31&#x27;, &#x27;RO32&#x27;, &#x27;RO41&#x27;,
       &#x27;RO42&#x27;, &#x27;SE11&#x27;, &#x27;SE12&#x27;, &#x27;SE21&#x27;, &#x27;SE22&#x27;, &#x27;SE23&#x27;, &#x27;SE31&#x27;, &#x27;SE32&#x27;, &#x27;SE33&#x27;,
       &#x27;SI01&#x27;, &#x27;SI02&#x27;, &#x27;SI03&#x27;, &#x27;SI04&#x27;, &#x27;SK01&#x27;, &#x27;SK02&#x27;, &#x27;SK03&#x27;, &#x27;SK04&#x27;],
      dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>year</span></div><div class='xr-var-dims'>(year)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;2009&#x27; &#x27;2010&#x27; ... &#x27;2017&#x27; &#x27;2018&#x27;</div><input id='attrs-8ec37fa9-1d81-4af1-a972-d9277f1fdf3a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8ec37fa9-1d81-4af1-a972-d9277f1fdf3a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d5581e65-50a0-4263-ada8-c942a31bcf0c' class='xr-var-data-in' type='checkbox'><label for='data-d5581e65-50a0-4263-ada8-c942a31bcf0c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;, &#x27;2017&#x27;,
       &#x27;2018&#x27;], dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-1916c705-f499-40ab-844b-1f740a9e9010' class='xr-section-summary-in' type='checkbox'  checked><label for='section-1916c705-f499-40ab-844b-1f740a9e9010' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>percentage_material_deprivation</span></div><div class='xr-var-dims'>(nuts2, year)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... 9.9 9.2 10.0</div><input id='attrs-19154650-857d-4a91-aece-8b163f752743' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-19154650-857d-4a91-aece-8b163f752743' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e372d70e-6b0c-47fb-aae6-9e2e5e3a130f' class='xr-var-data-in' type='checkbox'><label for='data-e372d70e-6b0c-47fb-aae6-9e2e5e3a130f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ nan,  nan,  nan, ...,  nan, 46.5, 38.6],
       [ nan,  nan,  nan, ...,  nan, 41. , 40.4],
       [ nan,  nan,  nan, ...,  nan, 36.4, 35.3],
       ...,
       [10.3,  9.8,  8.6, ...,  6.2,  5.2,  4.2],
       [11.1, 10.6, 10.7, ...,  9.1,  8.2,  9.1],
       [13.5, 15. , 12.3, ...,  9.9,  9.2, 10. ]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-e18ab550-3958-45f1-8070-b13229ffba81' class='xr-section-summary-in' type='checkbox'  ><label for='section-e18ab550-3958-45f1-8070-b13229ffba81' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>nuts2</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-8733eeaa-49f4-414b-8919-6facddc43582' class='xr-index-data-in' type='checkbox'/><label for='index-8733eeaa-49f4-414b-8919-6facddc43582' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, &#x27;AT21&#x27;, &#x27;AT22&#x27;, &#x27;AT31&#x27;,
       &#x27;AT32&#x27;,
       ...
       &#x27;SE32&#x27;, &#x27;SE33&#x27;, &#x27;SI01&#x27;, &#x27;SI02&#x27;, &#x27;SI03&#x27;, &#x27;SI04&#x27;, &#x27;SK01&#x27;, &#x27;SK02&#x27;, &#x27;SK03&#x27;,
       &#x27;SK04&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;nuts2&#x27;, length=179))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>year</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-04762d5d-4b12-47a2-8cc0-8b2c71d94ef2' class='xr-index-data-in' type='checkbox'/><label for='index-04762d5d-4b12-47a2-8cc0-8b2c71d94ef2' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;, &#x27;2017&#x27;,
       &#x27;2018&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;year&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-7a9e7674-4e3f-40f5-b2f1-597c97b808a6' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-7a9e7674-4e3f-40f5-b2f1-597c97b808a6' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
#+end_export


** unmet needs



Self-reported unmet needs for medical examination by main reason declared and NUTS 2 regions

- link to the data: https://ec.europa.eu/eurostat/databrowser/view/hlth_silc_08_r/default/table?lang=en
- https://ec.europa.eu/eurostat/documents/1012329/6070906/Personal+data+-+health+PH.pdf/7edfec40-462a-4cb2-a5fc-8d8845000ca4

| value   |                                                         |
|---------+---------------------------------------------------------|
| TOOEXP  | Too expensive                                           |
| TOOFAR  | Too far to travel                                       |
| NOTIME  | No time                                                 |
| NOKNOW  | Didn't know any good doctor or specialist               |
| WAITING | Waiting list                                            |
| FEAR    | Fear of doctor, hospital, examination or treatment      |
| HOPING  | Wanted to wait and see if problem got better on its own |
| OTH     | Other reason                                            |



#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('hlth_silc_08_r')
df.rename({'geo\\TIME_PERIOD':'nuts2'},inplace=True,axis=1)
df.drop(["unit"],axis=1,inplace=True)
df['nuts'] = [len(x)-2 for x in df.nuts2]
df = df[df.nuts == 2]
df.drop('nuts',axis=1,inplace=True)
columns = ['FEAR','TOOEXP','TOOFAR','WAITING',\
           'HOPING', 'NOTIME', 'NOKNOW','OTH']
df=df[df.reason.isin(columns)]
df = pd.melt(df,id_vars=['nuts2','reason'],
                        value_vars=[str(y) for y in year_range],
                        var_name='year',\
             value_name='unmet needs')
df.set_index(['nuts2','year','reason'],inplace=True)

df = df.unstack()
df.columns = df.columns.droplevel()
df['UNMET'] = df[columns].sum(axis=1)
df.drop(['FEAR','TOOFAR','WAITING',\
           'HOPING', 'NOTIME', 'NOKNOW','OTH'],axis=1,inplace=True)
df.tail()
#+end_src

#+RESULTS:
: reason      TOOEXP  UNMET
: nuts2 year               
: SK04  2014     1.1    6.7
:       2015     0.4    6.6
:       2016     0.5    8.1
:       2017     0.2    5.9
:       2018     0.4    6.5


#+begin_src jupyter-python 
ds_unmet_needs = df.to_xarray()
ds_unmet_needs.to_netcdf("./data/unmet_needs_nuts_2.nc")
ds_unmet_needs
#+end_src

#+RESULTS:
#+begin_export html
<div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewBox="0 0 32 32">
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewBox="0 0 32 32">
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

html[theme="dark"],
html[data-theme="dark"],
body[data-theme="dark"],
body.vscode-dark {
  --xr-font-color0: rgba(255, 255, 255, 1);
  --xr-font-color2: rgba(255, 255, 255, 0.54);
  --xr-font-color3: rgba(255, 255, 255, 0.38);
  --xr-border-color: #1f1f1f;
  --xr-disabled-color: #515151;
  --xr-background-color: #111111;
  --xr-background-color-row-even: #111111;
  --xr-background-color-row-odd: #313131;
}

.xr-wrap {
  display: block !important;
  min-width: 300px;
  max-width: 700px;
}

.xr-text-repr-fallback {
  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
  display: none;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: inline-block;
  opacity: 0;
  height: 0;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:focus + label {
  border: 2px solid var(--xr-font-color0);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: "►";
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: "▼";
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: "(";
}

.xr-dim-list:after {
  content: ")";
}

.xr-dim-list li:not(:last-child):after {
  content: ",";
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-index-preview {
  grid-column: 2 / 5;
  color: var(--xr-font-color2);
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt,
.xr-attrs dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 31kB
Dimensions:  (nuts2: 168, year: 11)
Coordinates:
  * nuts2    (nuts2) object 1kB &#x27;AL01&#x27; &#x27;AL02&#x27; &#x27;AL03&#x27; ... &#x27;SK02&#x27; &#x27;SK03&#x27; &#x27;SK04&#x27;
  * year     (year) object 88B &#x27;2008&#x27; &#x27;2009&#x27; &#x27;2010&#x27; ... &#x27;2016&#x27; &#x27;2017&#x27; &#x27;2018&#x27;
Data variables:
    TOOEXP   (nuts2, year) float64 15kB nan nan nan nan nan ... 0.4 0.5 0.2 0.4
    UNMET    (nuts2, year) float64 15kB 0.0 0.0 0.0 0.0 0.0 ... 6.6 8.1 5.9 6.5</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-1d979561-5f39-4ddc-9a63-27a41a66a9d7' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-1d979561-5f39-4ddc-9a63-27a41a66a9d7' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>nuts2</span>: 168</li><li><span class='xr-has-index'>year</span>: 11</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-77ccea0c-a74e-4527-928c-a8ac15a72119' class='xr-section-summary-in' type='checkbox'  checked><label for='section-77ccea0c-a74e-4527-928c-a8ac15a72119' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>nuts2</span></div><div class='xr-var-dims'>(nuts2)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AL01&#x27; &#x27;AL02&#x27; ... &#x27;SK03&#x27; &#x27;SK04&#x27;</div><input id='attrs-42a368e3-38fc-40fe-828d-319333500bb1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-42a368e3-38fc-40fe-828d-319333500bb1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8a6e77b8-34f4-4f9d-a554-611109d9ba3b' class='xr-var-data-in' type='checkbox'><label for='data-8a6e77b8-34f4-4f9d-a554-611109d9ba3b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;BE10&#x27;, &#x27;BE21&#x27;, &#x27;BE22&#x27;, &#x27;BE23&#x27;, &#x27;BE24&#x27;, &#x27;BE25&#x27;,
       &#x27;BE31&#x27;, &#x27;BE32&#x27;, &#x27;BE33&#x27;, &#x27;BE34&#x27;, &#x27;BE35&#x27;, &#x27;BG31&#x27;, &#x27;BG32&#x27;, &#x27;BG33&#x27;, &#x27;BG34&#x27;,
       &#x27;BG41&#x27;, &#x27;BG42&#x27;, &#x27;CH01&#x27;, &#x27;CH02&#x27;, &#x27;CH03&#x27;, &#x27;CH04&#x27;, &#x27;CH05&#x27;, &#x27;CH06&#x27;, &#x27;CH07&#x27;,
       &#x27;CZ01&#x27;, &#x27;CZ02&#x27;, &#x27;CZ03&#x27;, &#x27;CZ04&#x27;, &#x27;CZ05&#x27;, &#x27;CZ06&#x27;, &#x27;CZ07&#x27;, &#x27;CZ08&#x27;, &#x27;DK01&#x27;,
       &#x27;DK02&#x27;, &#x27;DK03&#x27;, &#x27;DK04&#x27;, &#x27;DK05&#x27;, &#x27;EL30&#x27;, &#x27;EL41&#x27;, &#x27;EL42&#x27;, &#x27;EL43&#x27;, &#x27;EL51&#x27;,
       &#x27;EL52&#x27;, &#x27;EL53&#x27;, &#x27;EL54&#x27;, &#x27;EL61&#x27;, &#x27;EL62&#x27;, &#x27;EL63&#x27;, &#x27;EL64&#x27;, &#x27;EL65&#x27;, &#x27;ES11&#x27;,
       &#x27;ES12&#x27;, &#x27;ES13&#x27;, &#x27;ES21&#x27;, &#x27;ES22&#x27;, &#x27;ES23&#x27;, &#x27;ES24&#x27;, &#x27;ES30&#x27;, &#x27;ES41&#x27;, &#x27;ES42&#x27;,
       &#x27;ES43&#x27;, &#x27;ES51&#x27;, &#x27;ES52&#x27;, &#x27;ES53&#x27;, &#x27;ES61&#x27;, &#x27;ES62&#x27;, &#x27;ES63&#x27;, &#x27;ES64&#x27;, &#x27;ES70&#x27;,
       &#x27;FI1B&#x27;, &#x27;FI1C&#x27;, &#x27;FI1D&#x27;, &#x27;HR02&#x27;, &#x27;HR03&#x27;, &#x27;HR04&#x27;, &#x27;HR05&#x27;, &#x27;HR06&#x27;, &#x27;HU10&#x27;,
       &#x27;HU11&#x27;, &#x27;HU12&#x27;, &#x27;HU21&#x27;, &#x27;HU22&#x27;, &#x27;HU23&#x27;, &#x27;HU31&#x27;, &#x27;HU32&#x27;, &#x27;HU33&#x27;, &#x27;IE01&#x27;,
       &#x27;IE02&#x27;, &#x27;IE04&#x27;, &#x27;IE05&#x27;, &#x27;IE06&#x27;, &#x27;ITC1&#x27;, &#x27;ITC2&#x27;, &#x27;ITC3&#x27;, &#x27;ITC4&#x27;, &#x27;ITF1&#x27;,
       &#x27;ITF2&#x27;, &#x27;ITF3&#x27;, &#x27;ITF4&#x27;, &#x27;ITF5&#x27;, &#x27;ITF6&#x27;, &#x27;ITG1&#x27;, &#x27;ITG2&#x27;, &#x27;ITH1&#x27;, &#x27;ITH2&#x27;,
       &#x27;ITH3&#x27;, &#x27;ITH4&#x27;, &#x27;ITH5&#x27;, &#x27;ITI1&#x27;, &#x27;ITI2&#x27;, &#x27;ITI3&#x27;, &#x27;ITI4&#x27;, &#x27;LT01&#x27;, &#x27;LT02&#x27;,
       &#x27;NO01&#x27;, &#x27;NO02&#x27;, &#x27;NO03&#x27;, &#x27;NO04&#x27;, &#x27;NO05&#x27;, &#x27;NO06&#x27;, &#x27;NO07&#x27;, &#x27;NO08&#x27;, &#x27;NO09&#x27;,
       &#x27;NO0A&#x27;, &#x27;PL21&#x27;, &#x27;PL22&#x27;, &#x27;PL41&#x27;, &#x27;PL42&#x27;, &#x27;PL43&#x27;, &#x27;PL51&#x27;, &#x27;PL52&#x27;, &#x27;PL61&#x27;,
       &#x27;PL62&#x27;, &#x27;PL63&#x27;, &#x27;PL71&#x27;, &#x27;PL72&#x27;, &#x27;PL81&#x27;, &#x27;PL82&#x27;, &#x27;PL84&#x27;, &#x27;PL91&#x27;, &#x27;PL92&#x27;,
       &#x27;RO11&#x27;, &#x27;RO12&#x27;, &#x27;RO21&#x27;, &#x27;RO22&#x27;, &#x27;RO31&#x27;, &#x27;RO32&#x27;, &#x27;RO41&#x27;, &#x27;RO42&#x27;, &#x27;SE11&#x27;,
       &#x27;SE12&#x27;, &#x27;SE21&#x27;, &#x27;SE22&#x27;, &#x27;SE23&#x27;, &#x27;SE31&#x27;, &#x27;SE32&#x27;, &#x27;SE33&#x27;, &#x27;SI01&#x27;, &#x27;SI02&#x27;,
       &#x27;SI03&#x27;, &#x27;SI04&#x27;, &#x27;SK01&#x27;, &#x27;SK02&#x27;, &#x27;SK03&#x27;, &#x27;SK04&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>year</span></div><div class='xr-var-dims'>(year)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;2008&#x27; &#x27;2009&#x27; ... &#x27;2017&#x27; &#x27;2018&#x27;</div><input id='attrs-085511c9-7c02-4734-970e-8625779cf0f0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-085511c9-7c02-4734-970e-8625779cf0f0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-84a14184-5503-4473-bb1d-f60c6507ce40' class='xr-var-data-in' type='checkbox'><label for='data-84a14184-5503-4473-bb1d-f60c6507ce40' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2008&#x27;, &#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;,
       &#x27;2017&#x27;, &#x27;2018&#x27;], dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-59c129da-711e-45f3-b4ed-6b33e253491d' class='xr-section-summary-in' type='checkbox'  checked><label for='section-59c129da-711e-45f3-b4ed-6b33e253491d' class='xr-section-summary' >Data variables: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>TOOEXP</span></div><div class='xr-var-dims'>(nuts2, year)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... 0.4 0.5 0.2 0.4</div><input id='attrs-c3390853-b5f1-4090-9817-97a6725971c6' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c3390853-b5f1-4090-9817-97a6725971c6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a26aa297-ed03-4d63-be31-a9e3f3dd478d' class='xr-var-data-in' type='checkbox'><label for='data-a26aa297-ed03-4d63-be31-a9e3f3dd478d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ nan,  nan,  nan, ...,  nan, 14.7, 18.9],
       [ nan,  nan,  nan, ...,  nan, 11. , 12.3],
       [ nan,  nan,  nan, ...,  nan, 12.4, 10.8],
       ...,
       [ 0.7,  0.6,  0.8, ...,  1.4,  0.7,  0.4],
       [ 0.4,  0.6,  0.6, ...,  0.6,  1.3,  1.1],
       [ 0.3,  0.7,  0.8, ...,  0.5,  0.2,  0.4]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>UNMET</span></div><div class='xr-var-dims'>(nuts2, year)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.0 0.0 ... 6.6 8.1 5.9 6.5</div><input id='attrs-958ea907-d1ab-4458-9c5c-b3592bfc5670' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-958ea907-d1ab-4458-9c5c-b3592bfc5670' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4d28deb9-7455-40d7-9809-c116206b9d4f' class='xr-var-data-in' type='checkbox'><label for='data-4d28deb9-7455-40d7-9809-c116206b9d4f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 0. ,  0. ,  0. , ...,  0. , 21.1, 26.5],
       [ 0. ,  0. ,  0. , ...,  0. , 18.2, 20.9],
       [ 0. ,  0. ,  0. , ...,  0. , 18.1, 17.6],
       ...,
       [ 5. ,  5.9,  6.5, ...,  5.5,  4. ,  4.4],
       [ 3.9,  3.7,  5.4, ...,  6.8,  6.5, 10.1],
       [ 3.1,  4.1,  4.7, ...,  8.1,  5.9,  6.5]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-ebcb366d-19f0-4ba6-9000-094c7ea1d6aa' class='xr-section-summary-in' type='checkbox'  ><label for='section-ebcb366d-19f0-4ba6-9000-094c7ea1d6aa' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>nuts2</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-3d820648-5961-4f9f-8c27-4327b7616b29' class='xr-index-data-in' type='checkbox'/><label for='index-3d820648-5961-4f9f-8c27-4327b7616b29' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;BE10&#x27;, &#x27;BE21&#x27;, &#x27;BE22&#x27;, &#x27;BE23&#x27;, &#x27;BE24&#x27;, &#x27;BE25&#x27;,
       &#x27;BE31&#x27;,
       ...
       &#x27;SE32&#x27;, &#x27;SE33&#x27;, &#x27;SI01&#x27;, &#x27;SI02&#x27;, &#x27;SI03&#x27;, &#x27;SI04&#x27;, &#x27;SK01&#x27;, &#x27;SK02&#x27;, &#x27;SK03&#x27;,
       &#x27;SK04&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;nuts2&#x27;, length=168))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>year</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-9106f001-c62d-49f0-b1ae-e6e6cd4fe3f4' class='xr-index-data-in' type='checkbox'/><label for='index-9106f001-c62d-49f0-b1ae-e6e6cd4fe3f4' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;2008&#x27;, &#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;,
       &#x27;2017&#x27;, &#x27;2018&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;year&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-e355e6de-6e8a-4183-88ad-908e7354325c' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-e355e6de-6e8a-4183-88ad-908e7354325c' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
#+end_export


** infant mortality
- https://ec.europa.eu/eurostat/databrowser/view/DEMO_R_MINFIND/default/table?lang=en&category=demo.demomreg
- https://ec.europa.eu/health/indicators/docs/echi_11.pdf
- The number of deaths of infants (younger than one year of age at death) per 1000 live births (based on one year data).


#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('demo_r_minfind')
df.rename({'geo\\TIME_PERIOD':'nuts2'},inplace=True,axis=1)
df.drop(["unit"],axis=1,inplace=True)
df['nuts'] = [len(x)-2 for x in df.nuts2]
df = df[df.nuts == 2]
df.drop('nuts',axis=1,inplace=True)
df = pd.melt(df,id_vars=['nuts2'],
                        value_vars=[str(y) for y in year_range],
                        var_name='year',\
             value_name='infant mortality')
df.set_index(['nuts2','year'],inplace=True)

df.head()
#+end_src

#+RESULTS:
:             infant mortality
: nuts2 year                  
: AL01  2008               NaN
: AL02  2008               NaN
: AL03  2008               NaN
: AT11  2008               3.2
: AT12  2008               4.7


#+begin_src jupyter-python 
ds_infant_mortality = df.to_xarray()
ds_infant_mortality.to_netcdf("./data/infant_mortality_nuts_2.nc")
ds_infant_mortality
#+end_src

#+RESULTS:
#+begin_export html
<div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewBox="0 0 32 32">
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewBox="0 0 32 32">
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

html[theme="dark"],
html[data-theme="dark"],
body[data-theme="dark"],
body.vscode-dark {
  --xr-font-color0: rgba(255, 255, 255, 1);
  --xr-font-color2: rgba(255, 255, 255, 0.54);
  --xr-font-color3: rgba(255, 255, 255, 0.38);
  --xr-border-color: #1f1f1f;
  --xr-disabled-color: #515151;
  --xr-background-color: #111111;
  --xr-background-color-row-even: #111111;
  --xr-background-color-row-odd: #313131;
}

.xr-wrap {
  display: block !important;
  min-width: 300px;
  max-width: 700px;
}

.xr-text-repr-fallback {
  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
  display: none;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: inline-block;
  opacity: 0;
  height: 0;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:focus + label {
  border: 2px solid var(--xr-font-color0);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: "►";
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: "▼";
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: "(";
}

.xr-dim-list:after {
  content: ")";
}

.xr-dim-list li:not(:last-child):after {
  content: ",";
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-index-preview {
  grid-column: 2 / 5;
  color: var(--xr-font-color2);
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt,
.xr-attrs dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 33kB
Dimensions:           (nuts2: 347, year: 11)
Coordinates:
  * nuts2             (nuts2) object 3kB &#x27;AL01&#x27; &#x27;AL02&#x27; &#x27;AL03&#x27; ... &#x27;UKM9&#x27; &#x27;UKN0&#x27;
  * year              (year) object 88B &#x27;2008&#x27; &#x27;2009&#x27; &#x27;2010&#x27; ... &#x27;2017&#x27; &#x27;2018&#x27;
Data variables:
    infant mortality  (nuts2, year) float64 31kB nan nan nan nan ... 4.5 3.8 4.2</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-f61a612c-9a18-471c-a1c4-f31b22981560' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-f61a612c-9a18-471c-a1c4-f31b22981560' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>nuts2</span>: 347</li><li><span class='xr-has-index'>year</span>: 11</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-15641ba9-f870-44e1-8aec-5a60c2343679' class='xr-section-summary-in' type='checkbox'  checked><label for='section-15641ba9-f870-44e1-8aec-5a60c2343679' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>nuts2</span></div><div class='xr-var-dims'>(nuts2)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AL01&#x27; &#x27;AL02&#x27; ... &#x27;UKM9&#x27; &#x27;UKN0&#x27;</div><input id='attrs-dd5b7534-e308-46d9-acf9-3f9a20e51b0f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-dd5b7534-e308-46d9-acf9-3f9a20e51b0f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-77d47724-58d1-4550-85fb-b2d0e48d5794' class='xr-var-data-in' type='checkbox'><label for='data-77d47724-58d1-4550-85fb-b2d0e48d5794' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, ..., &#x27;UKM8&#x27;, &#x27;UKM9&#x27;, &#x27;UKN0&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>year</span></div><div class='xr-var-dims'>(year)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;2008&#x27; &#x27;2009&#x27; ... &#x27;2017&#x27; &#x27;2018&#x27;</div><input id='attrs-ac54fd46-796e-43eb-b192-3dc7f733c472' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ac54fd46-796e-43eb-b192-3dc7f733c472' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-50aadc06-464e-4c29-9507-de6c1c1fb928' class='xr-var-data-in' type='checkbox'><label for='data-50aadc06-464e-4c29-9507-de6c1c1fb928' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2008&#x27;, &#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;,
       &#x27;2017&#x27;, &#x27;2018&#x27;], dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-5e73970b-d78a-449d-b8a4-bbc007bd2b18' class='xr-section-summary-in' type='checkbox'  checked><label for='section-5e73970b-d78a-449d-b8a4-bbc007bd2b18' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>infant mortality</span></div><div class='xr-var-dims'>(nuts2, year)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>nan nan nan nan ... 5.0 4.5 3.8 4.2</div><input id='attrs-b6b5ab90-d475-405c-bb24-e356eb5c80c4' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b6b5ab90-d475-405c-bb24-e356eb5c80c4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-45206306-6dcf-4cfd-8af3-387f02e19f71' class='xr-var-data-in' type='checkbox'><label for='data-45206306-6dcf-4cfd-8af3-387f02e19f71' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ nan,  nan,  nan, ...,  8.4,  7.9,  9.1],
       [ nan,  nan,  nan, ..., 10.5,  8.2,  9.9],
       [ nan,  nan,  nan, ...,  6.2,  7.2,  6.4],
       ...,
       [ nan,  nan,  nan, ...,  nan,  4.2,  3.1],
       [ nan,  nan,  nan, ...,  nan,  3. ,  2.8],
       [ 4.4,  4.8,  5.4, ...,  4.5,  3.8,  4.2]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-adc0fe58-daca-4299-8127-158e5837647b' class='xr-section-summary-in' type='checkbox'  ><label for='section-adc0fe58-daca-4299-8127-158e5837647b' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>nuts2</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-cfbd1193-f60d-4c21-b964-6abfa5b9c119' class='xr-index-data-in' type='checkbox'/><label for='index-cfbd1193-f60d-4c21-b964-6abfa5b9c119' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AL01&#x27;, &#x27;AL02&#x27;, &#x27;AL03&#x27;, &#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, &#x27;AT21&#x27;, &#x27;AT22&#x27;, &#x27;AT31&#x27;,
       &#x27;AT32&#x27;,
       ...
       &#x27;UKK3&#x27;, &#x27;UKK4&#x27;, &#x27;UKL1&#x27;, &#x27;UKL2&#x27;, &#x27;UKM5&#x27;, &#x27;UKM6&#x27;, &#x27;UKM7&#x27;, &#x27;UKM8&#x27;, &#x27;UKM9&#x27;,
       &#x27;UKN0&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;nuts2&#x27;, length=347))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>year</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-ed8ece95-d488-4f16-b8ff-78dcffdc1213' class='xr-index-data-in' type='checkbox'/><label for='index-ed8ece95-d488-4f16-b8ff-78dcffdc1213' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;2008&#x27;, &#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;,
       &#x27;2017&#x27;, &#x27;2018&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;year&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-7b1c78c1-1558-4bb7-88b6-7d003fc3fc06' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-7b1c78c1-1558-4bb7-88b6-7d003fc3fc06' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
#+end_export


** Number of physicians



- link to the data: https://ec.europa.eu/eurostat/databrowser/view/hlth_rs_physreg/default/table?lang=en&category=hlth.hlth_care.hlth_res.hlth_staff

#+begin_src jupyter-python :display plain
df = eurostat.get_data_df('hlth_rs_physreg')
df.rename({'geo\\TIME_PERIOD':'nuts2'},inplace=True,axis=1)
df = df[(df.unit == "P_HTHAB")]
df.drop(["unit"],axis=1,inplace=True)
df['nuts'] = [len(x)-2 for x in df.nuts2]
df = df[df.nuts == 2]
df.drop('nuts',axis=1,inplace=True)

df = pd.melt(df,id_vars=['nuts2'],
                        value_vars=[str(y) for y in year_range],
                        var_name='year',\
             value_name='number_physicians per inhabitant')
df.set_index(['nuts2','year'],inplace=True)
df.head()
#+end_src

#+RESULTS:
:             number_physicians per inhabitant
: nuts2 year                                  
: AT11  2008                            328.16
: AT12  2008                            411.20
: AT13  2008                            643.68
: AT21  2008                            398.51
: AT22  2008                            441.60


#+begin_src jupyter-python 
ds_number_physicians = df.to_xarray()
ds_number_physicians.to_netcdf("./data/number_physicians_nuts_2.nc")
ds_number_physicians
#+end_src

#+RESULTS:
#+begin_export html
<div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewBox="0 0 32 32">
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewBox="0 0 32 32">
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

html[theme="dark"],
html[data-theme="dark"],
body[data-theme="dark"],
body.vscode-dark {
  --xr-font-color0: rgba(255, 255, 255, 1);
  --xr-font-color2: rgba(255, 255, 255, 0.54);
  --xr-font-color3: rgba(255, 255, 255, 0.38);
  --xr-border-color: #1f1f1f;
  --xr-disabled-color: #515151;
  --xr-background-color: #111111;
  --xr-background-color-row-even: #111111;
  --xr-background-color-row-odd: #313131;
}

.xr-wrap {
  display: block !important;
  min-width: 300px;
  max-width: 700px;
}

.xr-text-repr-fallback {
  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
  display: none;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: inline-block;
  opacity: 0;
  height: 0;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:focus + label {
  border: 2px solid var(--xr-font-color0);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: "►";
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: "▼";
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: "(";
}

.xr-dim-list:after {
  content: ")";
}

.xr-dim-list li:not(:last-child):after {
  content: ",";
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-index-preview {
  grid-column: 2 / 5;
  color: var(--xr-font-color2);
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt,
.xr-attrs dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 24kB
Dimensions:                           (nuts2: 247, year: 11)
Coordinates:
  * nuts2                             (nuts2) object 2kB &#x27;AT11&#x27; ... &#x27;TRC3&#x27;
  * year                              (year) object 88B &#x27;2008&#x27; &#x27;2009&#x27; ... &#x27;2018&#x27;
Data variables:
    number_physicians per inhabitant  (nuts2, year) float64 22kB 328.2 ... 109.8</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-3fb85a5b-c431-4f86-aaf9-dc747f1a9269' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-3fb85a5b-c431-4f86-aaf9-dc747f1a9269' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>nuts2</span>: 247</li><li><span class='xr-has-index'>year</span>: 11</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-f8ae6e0a-5afc-4db4-b51c-fa7c91c1d9b5' class='xr-section-summary-in' type='checkbox'  checked><label for='section-f8ae6e0a-5afc-4db4-b51c-fa7c91c1d9b5' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>nuts2</span></div><div class='xr-var-dims'>(nuts2)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;AT11&#x27; &#x27;AT12&#x27; ... &#x27;TRC2&#x27; &#x27;TRC3&#x27;</div><input id='attrs-b4bf1061-9b04-4646-8b58-a44aec8863d0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b4bf1061-9b04-4646-8b58-a44aec8863d0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f996082a-dddf-42c7-93b9-85e67a14e234' class='xr-var-data-in' type='checkbox'><label for='data-f996082a-dddf-42c7-93b9-85e67a14e234' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, ..., &#x27;TRC1&#x27;, &#x27;TRC2&#x27;, &#x27;TRC3&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>year</span></div><div class='xr-var-dims'>(year)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;2008&#x27; &#x27;2009&#x27; ... &#x27;2017&#x27; &#x27;2018&#x27;</div><input id='attrs-8dc38e49-1cfa-4c47-ae59-ed09cda0c058' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8dc38e49-1cfa-4c47-ae59-ed09cda0c058' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e3c0347f-fd52-440a-9a3b-cf56c501bbff' class='xr-var-data-in' type='checkbox'><label for='data-e3c0347f-fd52-440a-9a3b-cf56c501bbff' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2008&#x27;, &#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;,
       &#x27;2017&#x27;, &#x27;2018&#x27;], dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-354f7567-9a51-4c9d-8a61-83c550e907eb' class='xr-section-summary-in' type='checkbox'  checked><label for='section-354f7567-9a51-4c9d-8a61-83c550e907eb' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>number_physicians per inhabitant</span></div><div class='xr-var-dims'>(nuts2, year)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>328.2 339.3 351.6 ... 112.0 109.8</div><input id='attrs-5112ccf3-4710-482b-85c9-7ccdbee97cee' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5112ccf3-4710-482b-85c9-7ccdbee97cee' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d9b9c5c7-a8a8-4670-9f1f-4406e6e3d510' class='xr-var-data-in' type='checkbox'><label for='data-d9b9c5c7-a8a8-4670-9f1f-4406e6e3d510' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[328.16, 339.29, 351.59, ..., 397.29, 406.08, 419.04],
       [411.2 , 418.53, 428.44, ..., 458.27, 458.1 , 464.67],
       [643.68, 649.29, 662.63, ..., 678.78, 682.2 , 676.87],
       ...,
       [106.82, 110.67, 117.26, ..., 135.52, 148.09, 146.85],
       [105.7 , 109.85, 120.74, ..., 124.94, 132.31, 131.69],
       [ 80.75,  84.52, 102.74, ..., 104.43, 112.04, 109.75]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-fd2bf062-affa-4f8f-92ca-bc6a9b46dce4' class='xr-section-summary-in' type='checkbox'  ><label for='section-fd2bf062-affa-4f8f-92ca-bc6a9b46dce4' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>nuts2</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-9926a209-c30e-4aa5-9fe2-7d85093ed5cb' class='xr-index-data-in' type='checkbox'/><label for='index-9926a209-c30e-4aa5-9fe2-7d85093ed5cb' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AT11&#x27;, &#x27;AT12&#x27;, &#x27;AT13&#x27;, &#x27;AT21&#x27;, &#x27;AT22&#x27;, &#x27;AT31&#x27;, &#x27;AT32&#x27;, &#x27;AT33&#x27;, &#x27;AT34&#x27;,
       &#x27;BE10&#x27;,
       ...
       &#x27;TR82&#x27;, &#x27;TR83&#x27;, &#x27;TR90&#x27;, &#x27;TRA1&#x27;, &#x27;TRA2&#x27;, &#x27;TRB1&#x27;, &#x27;TRB2&#x27;, &#x27;TRC1&#x27;, &#x27;TRC2&#x27;,
       &#x27;TRC3&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;nuts2&#x27;, length=247))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>year</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-adf9ea54-7088-483c-9ca1-6149be73bb56' class='xr-index-data-in' type='checkbox'/><label for='index-adf9ea54-7088-483c-9ca1-6149be73bb56' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;2008&#x27;, &#x27;2009&#x27;, &#x27;2010&#x27;, &#x27;2011&#x27;, &#x27;2012&#x27;, &#x27;2013&#x27;, &#x27;2014&#x27;, &#x27;2015&#x27;, &#x27;2016&#x27;,
       &#x27;2017&#x27;, &#x27;2018&#x27;],
      dtype=&#x27;object&#x27;, name=&#x27;year&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-1f0fffa1-d12c-4741-9f36-8a863c2c75b8' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-1f0fffa1-d12c-4741-9f36-8a863c2c75b8' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
#+end_export

* Merging the data

#+begin_src jupyter-python :display plain

ds_P = xr.open_dataset('./data/population_nuts_2.nc')
ds_P['year'] = (ds_P['year'].values).astype('int')
ds_M = xr.open_dataset('./data/deaths_nuts_2.nc')
ds_M['year'] = (ds_M['year'].values).astype('int')

ds_infant = xr.open_dataset("./data/infant_mortality_nuts_2.nc")
ds_infant['year'] = (ds_infant['year'].values).astype('int')
ds_physician = xr.open_dataset("./data/number_physicians_nuts_2.nc")
ds_physician['year'] = (ds_physician['year'].values).astype('int')
ds_deprivation = xr.open_dataset("./data/material_deprivation_nuts_2.nc")
ds_deprivation['year'] = (ds_deprivation['year'].values).astype('int')
ds_unmet = xr.open_dataset("./data/unmet_needs_nuts_2.nc")
ds_unmet['year'] = (ds_unmet['year'].values).astype('int')
ds = xr.merge([ds_P.drop_vars(["HF2_PC_CHE","HF2_PPS_HAB","HF3_PPS_HAB"]),ds_M,ds_deprivation,ds_unmet,ds_infant,ds_physician],join='left')
ds
#+end_src

#+RESULTS:
#+begin_example
<xarray.Dataset> Size: 60MB
Dimensions:                           (nuts2: 313, year: 11, sex: 2, age: 99)
Coordinates:
  ,* nuts2                             (nuts2) <U4 5kB 'AT11' 'AT12' ... 'UKN0'
  ,* year                              (year) int64 88B 2008 2009 ... 2017 2018
  ,* sex                               (sex) <U1 8B 'F' 'M'
  ,* age                               (age) float64 792B 1.0 2.0 ... 98.0 99.0
Data variables:
    country                           (nuts2, year, sex, age) <U14 38MB ...
    population                        (nuts2, year, sex, age) float64 5MB ...
    country_code                      (nuts2, year, sex, age) <U2 5MB ...
    HF3_PC_CHE                        (nuts2, year, sex, age) float64 5MB ...
    deaths                            (nuts2, year, sex, age) float64 5MB ...
    percentage_material_deprivation   (nuts2, year) float64 28kB nan nan ... nan
    TOOEXP                            (nuts2, year) float64 28kB nan nan ... nan
    UNMET                             (nuts2, year) float64 28kB nan nan ... nan
    infant mortality                  (nuts2, year) float64 28kB 3.2 0.9 ... 4.2
    number_physicians per inhabitant  (nuts2, year) float64 28kB 328.2 ... nan
#+end_example

#+begin_src jupyter-python :display plain

ds["country"] = ds["country"].isel(year=0,sex=0,age=0)
ds = ds.assign_coords(country=("nuts2", ds.country.values))
ds = ds.transpose("age","sex","year","nuts2")
ds
#+end_src

#+RESULTS:
#+begin_example
<xarray.Dataset> Size: 22MB
Dimensions:                           (nuts2: 313, year: 11, sex: 2, age: 99)
Coordinates:
  ,* nuts2                             (nuts2) <U4 5kB 'AT11' 'AT12' ... 'UKN0'
  ,* year                              (year) int64 88B 2008 2009 ... 2017 2018
  ,* sex                               (sex) <U1 8B 'F' 'M'
  ,* age                               (age) float64 792B 1.0 2.0 ... 98.0 99.0
    country                           (nuts2) <U14 18kB 'Austria' ... 'United...
Data variables:
    population                        (age, sex, year, nuts2) float64 5MB ...
    country_code                      (age, sex, year, nuts2) <U2 5MB ...
    HF3_PC_CHE                        (age, sex, year, nuts2) float64 5MB ...
    deaths                            (age, sex, year, nuts2) float64 5MB ...
    percentage_material_deprivation   (year, nuts2) float64 28kB nan nan ... nan
    TOOEXP                            (year, nuts2) float64 28kB nan nan ... nan
    UNMET                             (year, nuts2) float64 28kB nan nan ... nan
    infant mortality                  (year, nuts2) float64 28kB 3.2 4.7 ... 4.2
    number_physicians per inhabitant  (year, nuts2) float64 28kB 328.2 ... nan
#+end_example


#+begin_src jupyter-python :display plain
ds.to_netcdf("./data/oop_health_data.nc")
#+end_src

#+RESULTS:
